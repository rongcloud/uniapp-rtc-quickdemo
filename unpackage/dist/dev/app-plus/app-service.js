if (typeof Promise !== "undefined" && !Promise.prototype.finally) {
  Promise.prototype.finally = function(callback) {
    const promise = this.constructor;
    return this.then(
      (value) => promise.resolve(callback()).then(() => value),
      (reason) => promise.resolve(callback()).then(() => {
        throw reason;
      })
    );
  };
}
;
if (typeof uni !== "undefined" && uni && uni.requireGlobal) {
  const global = uni.requireGlobal();
  ArrayBuffer = global.ArrayBuffer;
  Int8Array = global.Int8Array;
  Uint8Array = global.Uint8Array;
  Uint8ClampedArray = global.Uint8ClampedArray;
  Int16Array = global.Int16Array;
  Uint16Array = global.Uint16Array;
  Int32Array = global.Int32Array;
  Uint32Array = global.Uint32Array;
  Float32Array = global.Float32Array;
  Float64Array = global.Float64Array;
  BigInt64Array = global.BigInt64Array;
  BigUint64Array = global.BigUint64Array;
}
;
if (uni.restoreGlobal) {
  uni.restoreGlobal(Vue, weex, plus, setTimeout, clearTimeout, setInterval, clearInterval);
}
(function(vue) {
  "use strict";
  function requireNativePlugin(name) {
    return weex.requireModule(name);
  }
  function formatAppLog(type, filename, ...args) {
    if (uni.__log__) {
      uni.__log__(type, filename, ...args);
    } else {
      console[type].apply(console, [...args, filename]);
    }
  }
  function requestAndroidPermissions() {
    return new Promise((resolve) => {
      if (typeof plus === "undefined") {
        formatAppLog("error", "at utils/permission.js:9", "ÂΩìÂâçÁéØÂ¢É‰∏çÊîØÊåÅplus APIÔºàËØ∑‰ΩøÁî®Ëá™ÂÆö‰πâË∞ÉËØïÂü∫Â∫ßÔºâ");
        resolve(false);
        return;
      }
      const platform = plus.os.name.toLowerCase();
      formatAppLog("log", "at utils/permission.js:16", "ÂΩìÂâçÂπ≥Âè∞Ôºö", platform);
      if (platform === "android") {
        requestAndroidCameraAndMicrophone().then(resolve);
      } else if (platform === "ios") {
        requestIOSCameraAndMicrophone().then(resolve);
      } else {
        formatAppLog("log", "at utils/permission.js:25", "‰∏çÊîØÊåÅÁöÑÂπ≥Âè∞ÔºåÈªòËÆ§ËøîÂõûtrue");
        resolve(true);
      }
    });
  }
  function requestAndroidCameraAndMicrophone() {
    return new Promise((resolve) => {
      formatAppLog("log", "at utils/permission.js:36", "ÂºÄÂßãÁÆÄÂåñÊùÉÈôêÁî≥ËØ∑...");
      const permissions = [
        "android.permission.CAMERA",
        "android.permission.RECORD_AUDIO"
      ];
      const checkPermission = (perm) => {
        return plus.android.checkPermission(perm) === 0;
      };
      const initialStatus = permissions.map((perm) => ({
        name: perm,
        granted: checkPermission(perm)
      }));
      formatAppLog("log", "at utils/permission.js:54", "ÂàùÂßãÊùÉÈôêÁä∂ÊÄÅÔºö", initialStatus);
      if (initialStatus.every((p) => p.granted)) {
        formatAppLog("log", "at utils/permission.js:58", "ÊâÄÊúâÊùÉÈôêÂ∑≤Êéà‰∫à");
        resolve(true);
        return;
      }
      const needRequest = permissions.filter((perm) => !checkPermission(perm));
      formatAppLog("log", "at utils/permission.js:65", "ÈúÄË¶ÅÁî≥ËØ∑ÁöÑÊùÉÈôêÔºö", needRequest);
      if (needRequest.length > 0) {
        formatAppLog("log", "at utils/permission.js:69", "Áõ¥Êé•Áî≥ËØ∑ÊùÉÈôêÔºö", needRequest);
        plus.android.requestPermissions(
          needRequest,
          (result) => {
            formatAppLog("log", "at utils/permission.js:74", "ÊùÉÈôêÁî≥ËØ∑ÁªìÊûúÔºö", result);
            resolve(true);
          },
          (err) => {
            formatAppLog("error", "at utils/permission.js:79", "ÊùÉÈôêÁî≥ËØ∑Â§±Ë¥•Ôºö", err);
            resolve(true);
          }
        );
      } else {
        resolve(true);
      }
    });
  }
  function requestIOSCameraAndMicrophone() {
    return new Promise((resolve) => {
      formatAppLog("log", "at utils/permission.js:237", "iOSÂπ≥Âè∞ÊùÉÈôêÁî≥ËØ∑");
      const checkCameraPermission = () => {
        return new Promise((resolve2) => {
          plus.camera.getCamera().then(() => {
            resolve2(true);
          }).catch(() => {
            resolve2(false);
          });
        });
      };
      const checkMicrophonePermission = () => {
        return new Promise((resolve2) => {
          if (plus.audio && plus.audio.Recorder) {
            plus.audio.getRecorder();
            resolve2(true);
          } else {
            resolve2(true);
          }
        });
      };
      Promise.all([checkCameraPermission(), checkMicrophonePermission()]).then(([cameraGranted, micGranted]) => {
        formatAppLog("log", "at utils/permission.js:266", "iOSÊùÉÈôêÊ£ÄÊü•ÁªìÊûúÔºö", { camera: cameraGranted, microphone: micGranted });
        if (cameraGranted && micGranted) {
          formatAppLog("log", "at utils/permission.js:269", "iOSÊâÄÊúâÊùÉÈôêÂ∑≤Êéà‰∫à");
          resolve(true);
        } else {
          const deniedPermissions = [];
          if (!cameraGranted)
            deniedPermissions.push("Áõ∏Êú∫");
          if (!micGranted)
            deniedPermissions.push("È∫¶ÂÖãÈ£é");
          uni.showModal({
            title: "ÊùÉÈôêÁî≥ËØ∑",
            content: `ÈúÄË¶Å ${deniedPermissions.join("„ÄÅ")} ÊùÉÈôêÊâçËÉΩ‰ΩøÁî®Èü≥ËßÜÈ¢ëÂäüËÉΩÔºåËØ∑Âú®ËÆæÁΩÆ‰∏≠ÂºÄÂêØ„ÄÇ`,
            confirmText: "ÂéªËÆæÁΩÆ",
            cancelText: "ÂèñÊ∂à",
            success: (res) => {
              if (res.confirm) {
                plus.runtime.openURL("app-settings:");
              }
              resolve(false);
            }
          });
        }
      });
    });
  }
  const appConfig = {
    // Ëûç‰∫ëAppKey - ËØ∑ÊõøÊç¢‰∏∫ÊÇ®ÁöÑÂÆûÈôÖAppKey
    appKey: "p5tvi9dspl334",
    // ÊµãËØïÁî®Êà∑ÂàóË°® - ÂèØ‰ª•Êñπ‰æøÂú∞Ê∑ªÂä†Êõ¥Â§öÁî®Êà∑
    testUsers: [
      {
        id: "9991",
        name: "ÊµãËØïÁî®Êà∑1",
        token: "wRRcc7tpneznfWJ8b8iAmJnIhp/u8YXKOn8cO1FsaNg=@sdkq.cn.rongnav.com;sdkq.cn.rongcfg.com",
        avatar: "üë§",
        description: "‰∏ªË¶ÅÊµãËØïË¥¶Êà∑"
      },
      {
        id: "9992",
        name: "ÊµãËØïÁî®Êà∑2",
        token: "qYJ98NqYbwbnfWJ8b8iAmEbAJuTn6E8ryqmxM7wQQQs=@sdkq.cn.rongnav.com;sdkq.cn.rongcfg.com",
        avatar: "üë§",
        description: "Â§áÁî®ÊµãËØïË¥¶Êà∑"
      },
      {
        id: "9993",
        name: "ÊµãËØïÁî®Êà∑3",
        token: "3qPc8BJiV6jnfWJ8b8iAmI6cLFTpPUM9DjFo0WjC6Aw=@sdkq.cn.rongnav.com;sdkq.cn.rongcfg.com",
        avatar: "üë§",
        description: "Â§áÁî®ÊµãËØïË¥¶Êà∑"
      }
    ]
  };
  var RCIMIWPushType;
  (function(RCIMIWPushType2) {
    RCIMIWPushType2[RCIMIWPushType2["iOS"] = 0] = "iOS";
    RCIMIWPushType2[RCIMIWPushType2["unknown"] = 1] = "unknown";
    RCIMIWPushType2[RCIMIWPushType2["rong"] = 2] = "rong";
    RCIMIWPushType2[RCIMIWPushType2["huawei"] = 3] = "huawei";
    RCIMIWPushType2[RCIMIWPushType2["xiaomi"] = 4] = "xiaomi";
    RCIMIWPushType2[RCIMIWPushType2["googleFCM"] = 5] = "googleFCM";
    RCIMIWPushType2[RCIMIWPushType2["googleGCM"] = 6] = "googleGCM";
    RCIMIWPushType2[RCIMIWPushType2["meizu"] = 7] = "meizu";
    RCIMIWPushType2[RCIMIWPushType2["vivo"] = 8] = "vivo";
    RCIMIWPushType2[RCIMIWPushType2["oppo"] = 9] = "oppo";
    RCIMIWPushType2[RCIMIWPushType2["honor"] = 10] = "honor";
  })(RCIMIWPushType || (RCIMIWPushType = {}));
  var RCIMIWImportanceHW;
  (function(RCIMIWImportanceHW2) {
    RCIMIWImportanceHW2[RCIMIWImportanceHW2["normal"] = 0] = "normal";
    RCIMIWImportanceHW2[RCIMIWImportanceHW2["low"] = 1] = "low";
  })(RCIMIWImportanceHW || (RCIMIWImportanceHW = {}));
  var RCIMIWMessageOperationPolicy;
  (function(RCIMIWMessageOperationPolicy2) {
    RCIMIWMessageOperationPolicy2[RCIMIWMessageOperationPolicy2["local"] = 0] = "local";
    RCIMIWMessageOperationPolicy2[RCIMIWMessageOperationPolicy2["remote"] = 1] = "remote";
    RCIMIWMessageOperationPolicy2[RCIMIWMessageOperationPolicy2["localRemote"] = 2] = "localRemote";
  })(RCIMIWMessageOperationPolicy || (RCIMIWMessageOperationPolicy = {}));
  var RCIMIWNativeCustomMessagePersistentFlag;
  (function(RCIMIWNativeCustomMessagePersistentFlag2) {
    RCIMIWNativeCustomMessagePersistentFlag2[RCIMIWNativeCustomMessagePersistentFlag2["none"] = 0] = "none";
    RCIMIWNativeCustomMessagePersistentFlag2[RCIMIWNativeCustomMessagePersistentFlag2["persisted"] = 1] = "persisted";
    RCIMIWNativeCustomMessagePersistentFlag2[RCIMIWNativeCustomMessagePersistentFlag2["counted"] = 2] = "counted";
    RCIMIWNativeCustomMessagePersistentFlag2[RCIMIWNativeCustomMessagePersistentFlag2["status"] = 3] = "status";
  })(RCIMIWNativeCustomMessagePersistentFlag || (RCIMIWNativeCustomMessagePersistentFlag = {}));
  var RCIMIWVIVOPushType;
  (function(RCIMIWVIVOPushType2) {
    RCIMIWVIVOPushType2[RCIMIWVIVOPushType2["operate"] = 0] = "operate";
    RCIMIWVIVOPushType2[RCIMIWVIVOPushType2["system"] = 1] = "system";
  })(RCIMIWVIVOPushType || (RCIMIWVIVOPushType = {}));
  var RCIMIWSentStatus;
  (function(RCIMIWSentStatus2) {
    RCIMIWSentStatus2[RCIMIWSentStatus2["sending"] = 0] = "sending";
    RCIMIWSentStatus2[RCIMIWSentStatus2["failed"] = 1] = "failed";
    RCIMIWSentStatus2[RCIMIWSentStatus2["sent"] = 2] = "sent";
    RCIMIWSentStatus2[RCIMIWSentStatus2["received"] = 3] = "received";
    RCIMIWSentStatus2[RCIMIWSentStatus2["read"] = 4] = "read";
    RCIMIWSentStatus2[RCIMIWSentStatus2["destroyed"] = 5] = "destroyed";
    RCIMIWSentStatus2[RCIMIWSentStatus2["canceled"] = 6] = "canceled";
  })(RCIMIWSentStatus || (RCIMIWSentStatus = {}));
  var RCIMIWPushNotificationQuietHoursLevel;
  (function(RCIMIWPushNotificationQuietHoursLevel2) {
    RCIMIWPushNotificationQuietHoursLevel2[RCIMIWPushNotificationQuietHoursLevel2["none"] = 0] = "none";
    RCIMIWPushNotificationQuietHoursLevel2[RCIMIWPushNotificationQuietHoursLevel2["mentionMessage"] = 1] = "mentionMessage";
    RCIMIWPushNotificationQuietHoursLevel2[RCIMIWPushNotificationQuietHoursLevel2["blocked"] = 2] = "blocked";
  })(RCIMIWPushNotificationQuietHoursLevel || (RCIMIWPushNotificationQuietHoursLevel = {}));
  var RCIMIWMessageDirection;
  (function(RCIMIWMessageDirection2) {
    RCIMIWMessageDirection2[RCIMIWMessageDirection2["send"] = 0] = "send";
    RCIMIWMessageDirection2[RCIMIWMessageDirection2["receive"] = 1] = "receive";
  })(RCIMIWMessageDirection || (RCIMIWMessageDirection = {}));
  var RCIMIWReceivedStatus;
  (function(RCIMIWReceivedStatus2) {
    RCIMIWReceivedStatus2[RCIMIWReceivedStatus2["unread"] = 0] = "unread";
    RCIMIWReceivedStatus2[RCIMIWReceivedStatus2["read"] = 1] = "read";
    RCIMIWReceivedStatus2[RCIMIWReceivedStatus2["listened"] = 2] = "listened";
    RCIMIWReceivedStatus2[RCIMIWReceivedStatus2["downloaded"] = 3] = "downloaded";
    RCIMIWReceivedStatus2[RCIMIWReceivedStatus2["retrieved"] = 4] = "retrieved";
    RCIMIWReceivedStatus2[RCIMIWReceivedStatus2["multipleReceive"] = 5] = "multipleReceive";
  })(RCIMIWReceivedStatus || (RCIMIWReceivedStatus = {}));
  var RCIMIWChatRoomMemberActionType;
  (function(RCIMIWChatRoomMemberActionType2) {
    RCIMIWChatRoomMemberActionType2[RCIMIWChatRoomMemberActionType2["unknown"] = 0] = "unknown";
    RCIMIWChatRoomMemberActionType2[RCIMIWChatRoomMemberActionType2["join"] = 1] = "join";
    RCIMIWChatRoomMemberActionType2[RCIMIWChatRoomMemberActionType2["leave"] = 2] = "leave";
  })(RCIMIWChatRoomMemberActionType || (RCIMIWChatRoomMemberActionType = {}));
  var RCIMIWPushNotificationLevel;
  (function(RCIMIWPushNotificationLevel2) {
    RCIMIWPushNotificationLevel2[RCIMIWPushNotificationLevel2["allMessage"] = 0] = "allMessage";
    RCIMIWPushNotificationLevel2[RCIMIWPushNotificationLevel2["none"] = 1] = "none";
    RCIMIWPushNotificationLevel2[RCIMIWPushNotificationLevel2["mention"] = 2] = "mention";
    RCIMIWPushNotificationLevel2[RCIMIWPushNotificationLevel2["mentionUsers"] = 3] = "mentionUsers";
    RCIMIWPushNotificationLevel2[RCIMIWPushNotificationLevel2["mentionAll"] = 4] = "mentionAll";
    RCIMIWPushNotificationLevel2[RCIMIWPushNotificationLevel2["blocked"] = 5] = "blocked";
  })(RCIMIWPushNotificationLevel || (RCIMIWPushNotificationLevel = {}));
  var RCIMIWMessageType;
  (function(RCIMIWMessageType2) {
    RCIMIWMessageType2[RCIMIWMessageType2["unknown"] = 0] = "unknown";
    RCIMIWMessageType2[RCIMIWMessageType2["custom"] = 1] = "custom";
    RCIMIWMessageType2[RCIMIWMessageType2["text"] = 2] = "text";
    RCIMIWMessageType2[RCIMIWMessageType2["voice"] = 3] = "voice";
    RCIMIWMessageType2[RCIMIWMessageType2["image"] = 4] = "image";
    RCIMIWMessageType2[RCIMIWMessageType2["file"] = 5] = "file";
    RCIMIWMessageType2[RCIMIWMessageType2["sight"] = 6] = "sight";
    RCIMIWMessageType2[RCIMIWMessageType2["gif"] = 7] = "gif";
    RCIMIWMessageType2[RCIMIWMessageType2["recall"] = 8] = "recall";
    RCIMIWMessageType2[RCIMIWMessageType2["reference"] = 9] = "reference";
    RCIMIWMessageType2[RCIMIWMessageType2["command"] = 10] = "command";
    RCIMIWMessageType2[RCIMIWMessageType2["commandNotification"] = 11] = "commandNotification";
    RCIMIWMessageType2[RCIMIWMessageType2["location"] = 12] = "location";
    RCIMIWMessageType2[RCIMIWMessageType2["userCustom"] = 13] = "userCustom";
    RCIMIWMessageType2[RCIMIWMessageType2["nativeCustom"] = 14] = "nativeCustom";
    RCIMIWMessageType2[RCIMIWMessageType2["nativeCustomMedia"] = 15] = "nativeCustomMedia";
  })(RCIMIWMessageType || (RCIMIWMessageType = {}));
  var RCIMIWMessageBlockType;
  (function(RCIMIWMessageBlockType2) {
    RCIMIWMessageBlockType2[RCIMIWMessageBlockType2["unknown"] = 0] = "unknown";
    RCIMIWMessageBlockType2[RCIMIWMessageBlockType2["global"] = 1] = "global";
    RCIMIWMessageBlockType2[RCIMIWMessageBlockType2["custom"] = 2] = "custom";
    RCIMIWMessageBlockType2[RCIMIWMessageBlockType2["thirdParty"] = 3] = "thirdParty";
  })(RCIMIWMessageBlockType || (RCIMIWMessageBlockType = {}));
  var RCIMIWTimeOrder;
  (function(RCIMIWTimeOrder2) {
    RCIMIWTimeOrder2[RCIMIWTimeOrder2["before"] = 0] = "before";
    RCIMIWTimeOrder2[RCIMIWTimeOrder2["after"] = 1] = "after";
  })(RCIMIWTimeOrder || (RCIMIWTimeOrder = {}));
  var RCIMIWCustomMessagePolicy;
  (function(RCIMIWCustomMessagePolicy2) {
    RCIMIWCustomMessagePolicy2[RCIMIWCustomMessagePolicy2["command"] = 0] = "command";
    RCIMIWCustomMessagePolicy2[RCIMIWCustomMessagePolicy2["normal"] = 1] = "normal";
    RCIMIWCustomMessagePolicy2[RCIMIWCustomMessagePolicy2["status"] = 2] = "status";
    RCIMIWCustomMessagePolicy2[RCIMIWCustomMessagePolicy2["storage"] = 3] = "storage";
  })(RCIMIWCustomMessagePolicy || (RCIMIWCustomMessagePolicy = {}));
  var RCIMIWChatRoomStatus;
  (function(RCIMIWChatRoomStatus2) {
    RCIMIWChatRoomStatus2[RCIMIWChatRoomStatus2["reset"] = 0] = "reset";
    RCIMIWChatRoomStatus2[RCIMIWChatRoomStatus2["destroyManual"] = 1] = "destroyManual";
    RCIMIWChatRoomStatus2[RCIMIWChatRoomStatus2["destroyAuto"] = 2] = "destroyAuto";
  })(RCIMIWChatRoomStatus || (RCIMIWChatRoomStatus = {}));
  var RCIMIWConversationType;
  (function(RCIMIWConversationType2) {
    RCIMIWConversationType2[RCIMIWConversationType2["invalid"] = 0] = "invalid";
    RCIMIWConversationType2[RCIMIWConversationType2["private"] = 1] = "private";
    RCIMIWConversationType2[RCIMIWConversationType2["group"] = 2] = "group";
    RCIMIWConversationType2[RCIMIWConversationType2["chatroom"] = 3] = "chatroom";
    RCIMIWConversationType2[RCIMIWConversationType2["system"] = 4] = "system";
    RCIMIWConversationType2[RCIMIWConversationType2["ultraGroup"] = 5] = "ultraGroup";
  })(RCIMIWConversationType || (RCIMIWConversationType = {}));
  var RCIMIWErrorCode;
  (function(RCIMIWErrorCode2) {
    RCIMIWErrorCode2[RCIMIWErrorCode2["success"] = 0] = "success";
    RCIMIWErrorCode2[RCIMIWErrorCode2["paramError"] = 1] = "paramError";
    RCIMIWErrorCode2[RCIMIWErrorCode2["engineDestroyed"] = 2] = "engineDestroyed";
    RCIMIWErrorCode2[RCIMIWErrorCode2["nativeOperationError"] = 3] = "nativeOperationError";
    RCIMIWErrorCode2[RCIMIWErrorCode2["resultUnknown"] = 4] = "resultUnknown";
  })(RCIMIWErrorCode || (RCIMIWErrorCode = {}));
  var RCIMIWUltraGroupTypingStatus;
  (function(RCIMIWUltraGroupTypingStatus2) {
    RCIMIWUltraGroupTypingStatus2[RCIMIWUltraGroupTypingStatus2["text"] = 0] = "text";
  })(RCIMIWUltraGroupTypingStatus || (RCIMIWUltraGroupTypingStatus = {}));
  var RCIMIWMentionedType;
  (function(RCIMIWMentionedType2) {
    RCIMIWMentionedType2[RCIMIWMentionedType2["all"] = 0] = "all";
    RCIMIWMentionedType2[RCIMIWMentionedType2["part"] = 1] = "part";
  })(RCIMIWMentionedType || (RCIMIWMentionedType = {}));
  var RCIMIWAreaCode;
  (function(RCIMIWAreaCode2) {
    RCIMIWAreaCode2[RCIMIWAreaCode2["bj"] = 0] = "bj";
    RCIMIWAreaCode2[RCIMIWAreaCode2["sg"] = 1] = "sg";
    RCIMIWAreaCode2[RCIMIWAreaCode2["na"] = 2] = "na";
    RCIMIWAreaCode2[RCIMIWAreaCode2["sgB"] = 3] = "sgB";
    RCIMIWAreaCode2[RCIMIWAreaCode2["sa"] = 4] = "sa";
  })(RCIMIWAreaCode || (RCIMIWAreaCode = {}));
  var RCIMIWChatRoomEntriesOperationType;
  (function(RCIMIWChatRoomEntriesOperationType2) {
    RCIMIWChatRoomEntriesOperationType2[RCIMIWChatRoomEntriesOperationType2["update"] = 0] = "update";
    RCIMIWChatRoomEntriesOperationType2[RCIMIWChatRoomEntriesOperationType2["remove"] = 1] = "remove";
  })(RCIMIWChatRoomEntriesOperationType || (RCIMIWChatRoomEntriesOperationType = {}));
  var RCIMIWLogLevel;
  (function(RCIMIWLogLevel2) {
    RCIMIWLogLevel2[RCIMIWLogLevel2["none"] = 0] = "none";
    RCIMIWLogLevel2[RCIMIWLogLevel2["error"] = 1] = "error";
    RCIMIWLogLevel2[RCIMIWLogLevel2["warn"] = 2] = "warn";
    RCIMIWLogLevel2[RCIMIWLogLevel2["info"] = 3] = "info";
    RCIMIWLogLevel2[RCIMIWLogLevel2["debug"] = 4] = "debug";
    RCIMIWLogLevel2[RCIMIWLogLevel2["verbose"] = 5] = "verbose";
  })(RCIMIWLogLevel || (RCIMIWLogLevel = {}));
  var RCIMIWBlacklistStatus;
  (function(RCIMIWBlacklistStatus2) {
    RCIMIWBlacklistStatus2[RCIMIWBlacklistStatus2["unknown"] = 0] = "unknown";
    RCIMIWBlacklistStatus2[RCIMIWBlacklistStatus2["inBlacklist"] = 1] = "inBlacklist";
    RCIMIWBlacklistStatus2[RCIMIWBlacklistStatus2["notInBlacklist"] = 2] = "notInBlacklist";
  })(RCIMIWBlacklistStatus || (RCIMIWBlacklistStatus = {}));
  var RCIMIWImportanceHonor;
  (function(RCIMIWImportanceHonor2) {
    RCIMIWImportanceHonor2[RCIMIWImportanceHonor2["normal"] = 0] = "normal";
    RCIMIWImportanceHonor2[RCIMIWImportanceHonor2["low"] = 1] = "low";
  })(RCIMIWImportanceHonor || (RCIMIWImportanceHonor = {}));
  var RCIMIWConnectionStatus;
  (function(RCIMIWConnectionStatus2) {
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["networkUnavailable"] = 0] = "networkUnavailable";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["connected"] = 1] = "connected";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["connecting"] = 2] = "connecting";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["unconnected"] = 3] = "unconnected";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["kickedOfflineByOtherClient"] = 4] = "kickedOfflineByOtherClient";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["tokenIncorrect"] = 5] = "tokenIncorrect";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["connUserBlocked"] = 6] = "connUserBlocked";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["signOut"] = 7] = "signOut";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["suspend"] = 8] = "suspend";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["timeout"] = 9] = "timeout";
    RCIMIWConnectionStatus2[RCIMIWConnectionStatus2["unknown"] = 10] = "unknown";
  })(RCIMIWConnectionStatus || (RCIMIWConnectionStatus = {}));
  let logLevel = RCIMIWLogLevel.info;
  function log(level, msg) {
    if (level <= logLevel) {
      let logStr = `${getLogLevelFlag(level)}/[RC:UniLog][IM]: ${msg}`;
      switch (level) {
        case RCIMIWLogLevel.error:
          formatAppLog("error", "at uni_modules/RongCloud-IMWrapper-V2/js_sdk/utils/RCIMLog.js:8", logStr);
          break;
        case RCIMIWLogLevel.warn:
          formatAppLog("warn", "at uni_modules/RongCloud-IMWrapper-V2/js_sdk/utils/RCIMLog.js:11", logStr);
          break;
        case RCIMIWLogLevel.info:
          formatAppLog("info", "at uni_modules/RongCloud-IMWrapper-V2/js_sdk/utils/RCIMLog.js:14", logStr);
          break;
        case RCIMIWLogLevel.debug:
          formatAppLog("debug", "at uni_modules/RongCloud-IMWrapper-V2/js_sdk/utils/RCIMLog.js:17", logStr);
          break;
        default:
          formatAppLog("log", "at uni_modules/RongCloud-IMWrapper-V2/js_sdk/utils/RCIMLog.js:20", logStr);
          break;
      }
    }
  }
  function getLogLevelFlag(level) {
    switch (level) {
      case RCIMIWLogLevel.error:
        return "E";
      case RCIMIWLogLevel.warn:
        return "W";
      case RCIMIWLogLevel.debug:
        return "D";
      default:
        return "I";
    }
  }
  const isString = (value) => typeof value === "string";
  const isNumber = (value) => typeof value === "number" && !Number.isNaN(value);
  const isArray = (arr) => Object.prototype.toString.call(arr).indexOf("Array") !== -1;
  const notEmptyString = (str) => isString(str) && str.length > 0;
  const notEmptyArray = (arr) => isArray(arr) && arr.length > 0;
  const isObject = (val) => Object.prototype.toString.call(val) === "[object Object]";
  const isUndefined = (val) => val === void 0 || Object.prototype.toString.call(val) === "[object Undefined]";
  const isNumberArray = (value) => {
    let flag = false;
    if (notEmptyArray(value)) {
      flag = value.every((item) => isNumber(item));
    }
    return flag;
  };
  var AssertRules;
  (function(AssertRules2) {
    AssertRules2[AssertRules2["STRING"] = 0] = "STRING";
    AssertRules2[AssertRules2["ONLY_STRING"] = 1] = "ONLY_STRING";
    AssertRules2[AssertRules2["NUMBER"] = 2] = "NUMBER";
    AssertRules2[AssertRules2["BOOLEAN"] = 3] = "BOOLEAN";
    AssertRules2[AssertRules2["OBJECT"] = 4] = "OBJECT";
    AssertRules2[AssertRules2["ARRAY"] = 5] = "ARRAY";
    AssertRules2[AssertRules2["NUMBER_ARRAY"] = 6] = "NUMBER_ARRAY";
  })(AssertRules || (AssertRules = {}));
  const RulesDesc = {
    [AssertRules.STRING]: "type is String and length > 0",
    [AssertRules.ONLY_STRING]: "type is string",
    [AssertRules.NUMBER]: "type is number",
    [AssertRules.BOOLEAN]: "type is Boolean",
    [AssertRules.OBJECT]: "type is Object",
    [AssertRules.ARRAY]: "type is Array",
    [AssertRules.NUMBER_ARRAY]: "type is Array and item is Number"
  };
  const validators = {
    [AssertRules.STRING]: notEmptyString,
    [AssertRules.ONLY_STRING]: isString,
    [AssertRules.NUMBER]: isNumber,
    [AssertRules.BOOLEAN]: (value) => typeof value === "boolean",
    [AssertRules.OBJECT]: isObject,
    [AssertRules.ARRAY]: notEmptyArray,
    [AssertRules.NUMBER_ARRAY]: isNumberArray
  };
  const validate = (key, value, validator, required = false) => {
    let validatorFunc = validators[validator] || validator;
    const isValid = required ? validatorFunc(value) : isUndefined(value) || value == null || validatorFunc(value);
    if (!isValid) {
      console == null ? void 0 : console.error(`'${key}' is invalid: ${JSON.stringify(value)}, the supported ${RulesDesc[validator]}`);
    }
    return isValid;
  };
  const RCUniIM = requireNativePlugin("RongCloud-IM-V2-RCUniIMV2");
  const paramErrorPromise = Promise.resolve(RCIMIWErrorCode.paramError);
  let instance;
  class RCIMIWEngine {
    static _invokeMethod(name, params) {
      log(RCIMIWLogLevel.info, `invokeMethod methodName: ${name}, params:${JSON.stringify(params)}`);
      return new Promise((resolve, _) => {
        RCUniIM.invokeMethod({ name, params }, (res) => {
          resolve(res);
        });
      });
    }
    _invokeMethod(name, callback, params) {
      log(RCIMIWLogLevel.info, `invokeMethod methodName: ${name}, params:${JSON.stringify(params)}`);
      return new Promise((resolve, _) => {
        if (callback) {
          RCUniIM.invokeMethod({ name, params }, (res) => {
            resolve(res);
          }, callback);
        } else {
          RCUniIM.invokeMethod({ name, params }, (res) => {
            resolve(res);
          });
        }
      });
    }
    _setListener(eventName, callback) {
      log(RCIMIWLogLevel.info, `setListener eventName: ${eventName}, callback:${callback != null}`);
      RCUniIM.removeAllEventListeners(eventName);
      if (callback) {
        let listener = (res) => {
          callback(res.data);
        };
        RCUniIM.addEventListener(eventName, listener);
      }
    }
    /**
     * ÂàùÂßãÂåñ IM ÂØπË±°
     * @param appKey Ëûç‰∫ëÂêéÂè∞Áî≥ËØ∑ÁöÑÂ∫îÁî® appKey
     * @param options ÂÖ®Â±ÄÈÖçÁΩÆÈ°π
     * @returns ÂàõÂª∫ÁöÑ IM ÂØπË±°
     */
    static async create(appKey, options = {}) {
      if (instance) {
        return new Promise((resolve) => resolve(instance));
      }
      let code = await RCIMIWEngine._invokeMethod("create", { appKey, options });
      if (code === 0) {
        instance = new RCIMIWEngine();
        return instance;
      }
      return new Promise((resolve) => resolve(null));
    }
    /**
     * ÈîÄÊØÅ IM ÂØπË±°
     */
    async destroy() {
      let code = await this._invokeMethod("destroy", null);
      if (code === 0) {
        instance = null;
      }
      return code;
    }
    /**
     * Ê≥®ÂÜåÊé®ÈÄÅ token ÁªôËûç‰∫ëÔºåÁî®‰∫é‰∏çÈõÜÊàêËûç‰∫ëÊé®ÈÄÅ SDK ‰ΩÜÈúÄ‰ΩøÁî®Ëûç‰∫ëÊ∂àÊÅØÊé®ÈÄÅËÉΩÂäõ„ÄÇ
     * Â¶ÇÊûúÊòØ iOS Âπ≥Âè∞Êó∂Ôºå‰ºöÂøΩÁï•‰º†ÂÖ•ÁöÑ pushType ÂÄºÔºåÂè™‰ΩøÁî® pushToken ÂèÇÊï∞„ÄÇ
     * ËØ•ÊñπÊ≥ïÈúÄË¶ÅÂú® IM ÂàùÂßãÂåñÂêé 3 ÁßíÂÜçË∞ÉÁî®„ÄÇ
     * @param pushType Êé®ÈÄÅÂéÇÂïÜÁ±ªÂûã
     * @param pushToken Êé®ÈÄÅ token ÔºàÂéÇÂïÜÊé•Âè£ Êàñ ‰∏âÊñπÊé®ÈÄÅ SDK Êèê‰æõÁöÑÔºâ
     * @returns ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    registerPushToken(pushType, pushToken) {
      if (!validate("pushType", pushType, AssertRules.NUMBER, true) || !validate("pushToken", pushToken, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      const Platform = uni.getSystemInfoSync().platform;
      if (Platform == "android" && pushType == RCIMIWPushType.iOS) {
        log(RCIMIWLogLevel.error, "pushType iOS only support iOS platform");
        return paramErrorPromise;
      }
      return this._invokeMethod("registerPushToken", null, { pushType, pushToken });
    }
    // /**
    //  * Ê†πÊçÆÊ∂àÊÅØ id Ëé∑ÂèñÊ∂àÊÅØ‰ΩìÔºàÊú¨Âú∞Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂîØ‰∏ÄÂÄºÔºâ„ÄÇ
    //  * @param messageId Ê∂àÊÅØÁöÑ messageIdÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑Âèñ
    //  */
    // getMessageById(messageId: number): Promise<{code: number, message: RCIMIWMessage}> {
    //     return this._invokeMethod('getMessageById', {messageId});
    // }
    // /**
    //  * ÈÄöËøáÂÖ®Â±ÄÂîØ‰∏Ä id Ëé∑ÂèñÊ∂àÊÅØÂÆû‰Ωì„ÄÇ
    //  * @param messageUId Ê∂àÊÅØÁöÑ messageUidÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑ÂèñÔºå‰∏îÂè™ÊúâÂèëÈÄÅÊàêÂäüÁöÑÊ∂àÊÅØÊâç‰ºöÊúâÂÄº„ÄÇ
    //  */
    // getMessageByUId(messageUId: string): Promise<{code: number, message: RCIMIWMessage}> {
    //     return this._invokeMethod('getMessageByUId', {messageUId});
    // }
    /**
     * Ê≥®ÂÜåÂéüÁîüËá™ÂÆö‰πâÊôÆÈÄöÊ∂àÊÅØ
     * @param messageIdentifier Ê∂àÊÅØÁöÑÂîØ‰∏ÄÊ†áËØÜ
     * @param persistentFlag Ê∂àÊÅØÁöÑÂ≠òÂÇ®Á≠ñÁï•
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäüÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•ÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    registerNativeCustomMessage(messageIdentifier, persistentFlag) {
      if (!validate("messageIdentifier", messageIdentifier, AssertRules.STRING, true) || !validate("persistentFlag", persistentFlag, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("registerNativeCustomMessage", resultCallback, { messageIdentifier, persistentFlag });
    }
    /**
     * Ê≥®ÂÜåÂéüÁîüËá™ÂÆö‰πâÂ™í‰ΩìÊ∂àÊÅØ
     * @param messageIdentifier Ê∂àÊÅØÁöÑÂîØ‰∏ÄÊ†áËØÜ
     * @param persistentFlag Ê∂àÊÅØÁöÑÂ≠òÂÇ®Á≠ñÁï•
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäüÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•ÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    registerNativeCustomMediaMessage(messageIdentifier, persistentFlag) {
      if (!validate("messageIdentifier", messageIdentifier, AssertRules.STRING, true) || !validate("persistentFlag", persistentFlag, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("registerNativeCustomMediaMessage", resultCallback, {
        messageIdentifier,
        persistentFlag
      });
    }
    /**
     * ËøûÊé•Ëûç‰∫ëÊúçÂä°Âô®ÔºåÂú®Êï¥‰∏™Â∫îÁî®Á®ãÂ∫èÂÖ®Â±ÄÔºåÂè™ÈúÄË¶ÅË∞ÉÁî®‰∏ÄÊ¨°„ÄÇË∞ÉÁî®Ê≠§Êé•Âè£ËøîÂõûÈùû‰∏öÂä°ÈîôËØØÁ†ÅÊó∂ÔºåSDK ‰ºöÂêØÂä®ÈáçËøûÊú∫Âà∂ËøõË°åÈáçËøûÔºõÂ¶ÇÊûú‰ªçÊ≤°ÊúâËøûÊé•ÊàêÂäüÔºå‰ºöÂú®ËÆæÂ§áÁΩëÁªúÁä∂ÊÄÅÂèòÂåñÊó∂ÂÜçÊ¨°ËøõË°åÈáçËøû„ÄÇ
     * @param token    Ë∞ÉÁî® server api Ëé∑ÂèñÂà∞ÁöÑ token
     * @param timeout  ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰ΩçÔºöÁßí„ÄÇ
     * timeLimit <= 0ÔºåÂàô IM Â∞Ü‰∏ÄÁõ¥ËøûÊé•ÔºåÁõ¥Âà∞ËøûÊé•ÊàêÂäüÊàñËÄÖÊó†Ê≥ïËøûÊé•ÔºàÂ¶Ç token ÈùûÊ≥ïÔºâ
     * timeLimit > 0ÔºåÂàô IM Â∞ÜÊúÄÂ§öËøûÊé• timeLimit Áßí
     * Â¶ÇÊûúÂú® timeLimit ÁßíÂÜÖËøûÊé•ÊàêÂäüÔºåÂêéÈù¢ÂÜçÂèëÁîü‰∫ÜÁΩëÁªúÂèòÂåñÊàñÂâçÂêéÂè∞ÂàáÊç¢ÔºåSDK ‰ºöËá™Âä®ÈáçËøûÔºõ Â¶ÇÊûúÂú® timeLimit ÁßíÊó†Ê≥ïËøûÊé•ÊàêÂäüÂàô‰∏çÂÜçËøõË°åÈáçËøûÔºåÈÄöËøá listener ÂëäÁü•ËøûÊé•Ë∂ÖÊó∂ÔºåÊÇ®ÈúÄË¶ÅÂÜçËá™Ë°åË∞ÉÁî® connect Êé•Âè£
     * @param callback ÈìæÊé•‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener Êé•Âè£ÂõûË∞ÉÂèØ‰ª•ÁõëÂê¨ [onConnected]
     */
    connect(token, timeout, callback) {
      if (!validate("token", token, AssertRules.STRING, true) || !validate("timeout", timeout, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onDatabaseOpened") {
            let { code } = res;
            (_a = callback.onDatabaseOpened) == null ? void 0 : _a.call(callback, { code });
          }
          if (res.callbackName === "onConnected") {
            let { code, userId } = res;
            (_b = callback.onConnected) == null ? void 0 : _b.call(callback, { code, userId });
          }
        };
      }
      return this._invokeMethod("connect", resultCallback, { token, timeout });
    }
    /**
     * Êñ≠ÂºÄÈìæÊé•
     * Ê≥®ÔºöÂõ†‰∏∫ SDK Âú®ÂâçÂêéÂè∞ÂàáÊç¢ÊàñËÄÖÁΩëÁªúÂá∫Áé∞ÂºÇÂ∏∏ÈÉΩ‰ºöËá™Âä®ÈáçËøûÔºå‰øùËØÅËøûÊé•ÂèØÈù†ÊÄß„ÄÇ ÊâÄ‰ª•Èô§ÈùûÊÇ®ÁöÑ App ÈÄªËæëÈúÄË¶ÅÁôªÂá∫ÔºåÂê¶Âàô‰∏ÄËà¨‰∏çÈúÄË¶ÅË∞ÉÁî®Ê≠§ÊñπÊ≥ïËøõË°åÊâãÂä®Êñ≠ÂºÄ
     * @param receivePush ÈÄÄÂá∫ÂêéÊòØÂê¶Êé•Êî∂ pushÔºåtrue:Êñ≠ÂºÄÂêéÊé•Êî∂ËøúÁ®ãÊé®ÈÄÅÔºåfalse:Êñ≠ÂºÄÂêé‰∏çÂÜçÊé•Êî∂ËøúÁ®ãÊé®ÈÄÅ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    disconnect(receivePush) {
      if (!validate("receivePush", receivePush, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("disconnect", resultCallback, { receivePush });
    }
    /**
     * ÊûÑÂª∫ÊñáÊú¨Ê∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûãÔºå
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param text      ÊñáÊú¨ÂÜÖÂÆπ
     * @return ÊñáÊú¨Ê∂àÊÅØÂÆû‰Ωì
     */
    createTextMessage(type, targetId, channelId, text) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("text", text, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createTextMessage", resultCallback, { type, targetId, channelId, text });
    }
    /**
     * ÊûÑÂª∫ÂõæÁâáÊ∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param path      ÂõæÁâáÊ∂àÊÅØÁöÑÊú¨Âú∞Ë∑ØÂæÑÔºåÂøÖÈ°ª‰∏∫ÊúâÊïàË∑ØÂæÑ
     * @return ÂõæÁâáÊ∂àÊÅØÂÆû‰Ωì
     */
    createImageMessage(type, targetId, channelId, path) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("path", path, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createImageMessage", resultCallback, { type, targetId, channelId, path });
    }
    /**
     * ÊûÑÂª∫Êñá‰ª∂Ê∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param path      Êñá‰ª∂Ê∂àÊÅØÁöÑÊú¨Âú∞Ë∑ØÂæÑÔºåÂøÖÈ°ª‰∏∫ÊúâÊïàË∑ØÂæÑ
     * @return Êñá‰ª∂Ê∂àÊÅØÂÆû‰Ωì
     */
    createFileMessage(type, targetId, channelId, path) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("path", path, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createFileMessage", resultCallback, { type, targetId, channelId, path });
    }
    /**
     * ÊûÑÂª∫Â∞èËßÜÈ¢ëÊ∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param path      Â∞èËßÜÈ¢ëÊ∂àÊÅØÁöÑÊú¨Âú∞Ë∑ØÂæÑÔºåÂøÖÈ°ª‰∏∫ÊúâÊïàË∑ØÂæÑ
     * @param duration  Â∞èËßÜÈ¢ëÊ∂àÊÅØÁöÑËßÜÈ¢ëÊó∂Èïø
     * @return ËßÜÈ¢ëÊ∂àÊÅØÂÆû‰Ωì
     */
    createSightMessage(type, targetId, channelId, path, duration) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("path", path, AssertRules.STRING, true) || !validate("duration", duration, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createSightMessage", resultCallback, { type, targetId, channelId, path, duration });
    }
    /**
     * ÊûÑÂª∫ËØ≠Èü≥Ê∂àÊÅØ (È´òÊ∏ÖËØ≠Èü≥)
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param path      ËØ≠Èü≥Ê∂àÊÅØÁöÑÊú¨Âú∞Ë∑ØÂæÑÔºåÂøÖÈ°ª‰∏∫ÊúâÊïàË∑ØÂæÑ
     * @param duration  ËØ≠Èü≥Ê∂àÊÅØÁöÑÊ∂àÊÅØÊó∂Èïø
     * @return ËØ≠Èü≥Ê∂àÊÅØÁöÑÂÆû‰Ωì
     */
    createVoiceMessage(type, targetId, channelId, path, duration) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("path", path, AssertRules.STRING, true) || !validate("duration", duration, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createVoiceMessage", resultCallback, { type, targetId, channelId, path, duration });
    }
    /**
     * ÊûÑÂª∫ÂºïÁî®Ê∂àÊÅØ
     * @param type             ‰ºöËØùÁ±ªÂûã
     * @param targetId         ‰ºöËØù ID
     * @param channelId        È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param referenceMessage ÂºïÁî®ÁöÑÊ∂àÊÅØ
     * @param text             ÂºïÁî®ÁöÑÊñáÊú¨ÂÜÖÂÆπ
     * @return ÂºïÁî®Ê∂àÊÅØÂÆû‰Ωì
     */
    createReferenceMessage(type, targetId, channelId, referenceMessage, text) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("referenceMessage", referenceMessage, AssertRules.OBJECT, true) || !validate("text", text, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createReferenceMessage", resultCallback, {
        type,
        targetId,
        channelId,
        referenceMessage,
        text
      });
    }
    /**
     * ÊûÑÂª∫ GIF Ê∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param path      GIF Ê∂àÊÅØÁöÑÊú¨Âú∞Ë∑ØÂæÑ
     * @return GIF Ê∂àÊÅØÂÆû‰Ωì
     */
    createGIFMessage(type, targetId, channelId, path) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("path", path, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createGIFMessage", resultCallback, { type, targetId, channelId, path });
    }
    /**
     * ÊûÑÂª∫Ëá™ÂÆö‰πâÊ∂àÊÅØ
     * @param type              ‰ºöËØùÁ±ªÂûã
     * @param targetId          ‰ºöËØù ID
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param policy            Ê∂àÊÅØÁöÑÂ≠òÂÇ®Á≠ñÁï•
     * @param messageIdentifier Ê∂àÊÅØÁöÑÊ†áËØÜÁ¨¶ÔºåÈúÄÂîØ‰∏Ä
     * @param fields            Ê∂àÊÅØÁöÑÂÜÖÂÆπÈîÆÂÄºÂØπ
     * @return Ëá™ÂÆö‰πâÊ∂àÊÅØÂÆû‰Ωì
     */
    createCustomMessage(type, targetId, channelId, policy, messageIdentifier, fields) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("policy", policy, AssertRules.NUMBER, true) || !validate("messageIdentifier", messageIdentifier, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createCustomMessage", resultCallback, {
        type,
        targetId,
        channelId,
        policy,
        messageIdentifier,
        fields
      });
    }
    /**
     * ÊûÑÂª∫‰ΩçÁΩÆÊ∂àÊÅØ
     * @param type          ‰ºöËØùÁ±ªÂûã
     * @param targetId      ‰ºöËØù ID
     * @param channelId     È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param longitude     ÁªèÂ∫¶
     * @param latitude      Á∫¨Â∫¶
     * @param poiName       POI ‰ø°ÊÅØ
     * @param thumbnailPath Áº©Áï•ÂõæÊú¨Âú∞Ë∑ØÂæÑÔºåÂøÖÈ°ª‰∏∫ÊúâÊïàË∑ØÂæÑ
     * @return ‰ΩçÁΩÆÊ∂àÊÅØÂÆû‰Ωì
     */
    createLocationMessage(type, targetId, channelId, longitude, latitude, poiName, thumbnailPath) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("longitude", longitude, AssertRules.NUMBER, true) || !validate("latitude", latitude, AssertRules.NUMBER, true) || !validate("poiName", poiName, AssertRules.STRING, true) || !validate("thumbnailPath", thumbnailPath, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createLocationMessage", resultCallback, {
        type,
        targetId,
        channelId,
        longitude,
        latitude,
        poiName,
        thumbnailPath
      });
    }
    /**
     * ÊûÑÂª∫ÂéüÁîüËá™ÂÆö‰πâÊôÆÈÄöÊ∂àÊÅØ
     * @param type ‰ºöËØùÁ±ªÂûã
     * @param targetId ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param messageIdentifier Ê∂àÊÅØÁöÑÊ†áËØÜÁ¨¶ÔºåÈúÄÂîØ‰∏Ä
     * @param fields Ê∂àÊÅØÁöÑÂÜÖÂÆπÈîÆÂÄºÂØπ
     * @return ÂéüÁîüËá™ÂÆö‰πâÊôÆÈÄöÊ∂àÊÅØ
     */
    createNativeCustomMessage(type, targetId, channelId, messageIdentifier, fields) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("messageIdentifier", messageIdentifier, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createNativeCustomMessage", resultCallback, {
        type,
        targetId,
        channelId,
        messageIdentifier,
        fields
      });
    }
    /**
     * ÊûÑÂª∫ÂéüÁîüËá™ÂÆö‰πâÂ™í‰ΩìÊ∂àÊÅØ
     * @param type ‰ºöËØùÁ±ªÂûã
     * @param targetId ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param messageIdentifier Ê∂àÊÅØÁöÑÊ†áËØÜÁ¨¶ÔºåÈúÄÂîØ‰∏Ä
     * @param path Â™í‰ΩìÊñá‰ª∂ÁöÑÊú¨Âú∞Ë∑ØÂæÑÔºåÂøÖÈ°ª‰∏∫ÊúâÊïàË∑ØÂæÑ
     * @param fields Ê∂àÊÅØÁöÑÂÜÖÂÆπÈîÆÂÄºÂØπ
     * @return ÂéüÁîüËá™ÂÆö‰πâÂ™í‰ΩìÊ∂àÊÅØ
     */
    createNativeCustomMediaMessage(type, targetId, channelId, messageIdentifier, path, fields) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("messageIdentifier", messageIdentifier, AssertRules.STRING, true) || !validate("path", path, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("createNativeCustomMediaMessage", resultCallback, {
        type,
        targetId,
        channelId,
        messageIdentifier,
        path,
        fields
      });
    }
    /**
     * ÂèëÈÄÅÊôÆÈÄöÊ∂àÊÅØ
     * @param message  ÂèëÈÄÅÁöÑÊ∂àÊÅØÂÆû‰Ωì
     * @param callback ÂèëÈÄÅÊ∂àÊÅØÁöÑ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener Êé•Âè£ÂõûË∞ÉÂèØ‰ª•ÁõëÂê¨ [onMessageAttached],[onMessageSent]
     */
    sendMessage(message, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onMessageSaved") {
            let { message: message2 } = res;
            (_a = callback.onMessageSaved) == null ? void 0 : _a.call(callback, { message: message2 });
          }
          if (res.callbackName === "onMessageSent") {
            let { code, message: message2 } = res;
            (_b = callback.onMessageSent) == null ? void 0 : _b.call(callback, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("sendMessage", resultCallback, { message });
    }
    /**
     * ÂèëÈÄÅÂ™í‰ΩìÊ∂àÊÅØ
     * @param message  ÂèëÈÄÅÁöÑÂ™í‰ΩìÊ∂àÊÅØÂÆû‰Ωì
     * @param listener ÂèëÈÄÅÂ™í‰ΩìÊ∂àÊÅØÁöÑ‰∫ã‰ª∂ÁõëÂê¨
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener Êé•Âè£ÂõûË∞ÉÂèØ‰ª•ÁõëÂê¨ [onMediaMessageSending],[onMediaMessageAttached],[onMediaMessageSent]
     */
    sendMediaMessage(message, listener) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (listener) {
        resultCallback = (res) => {
          var _a, _b, _c, _d;
          if (res.callbackName === "onMediaMessageSaved") {
            let { message: message2 } = res;
            (_a = listener.onMediaMessageSaved) == null ? void 0 : _a.call(listener, { message: message2 });
          }
          if (res.callbackName === "onMediaMessageSending") {
            let { message: message2, progress } = res;
            (_b = listener.onMediaMessageSending) == null ? void 0 : _b.call(listener, { message: message2, progress });
          }
          if (res.callbackName === "onSendingMediaMessageCanceled") {
            let { message: message2 } = res;
            (_c = listener.onSendingMediaMessageCanceled) == null ? void 0 : _c.call(listener, { message: message2 });
          }
          if (res.callbackName === "onMediaMessageSent") {
            let { code, message: message2 } = res;
            (_d = listener.onMediaMessageSent) == null ? void 0 : _d.call(listener, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("sendMediaMessage", resultCallback, { message });
    }
    /**
     * ÂèñÊ∂àÂèëÈÄÅÂ™í‰ΩìÊ∂àÊÅØ
     * @param message  ÈúÄË¶ÅÂèñÊ∂àÂèëÈÄÅÁöÑÂ™í‰ΩìÊ∂àÊÅØÂÆû‰Ωì
     * @param callback ÂèñÊ∂àÂèëÈÄÅÂ™í‰ΩìÊ∂àÊÅØÁöÑ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener Êé•Âè£ÂõûË∞ÉÂèØ‰ª•ÁõëÂê¨ [onSendingMediaMessageCanceled]
     */
    cancelSendingMediaMessage(message, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onCancelSendingMediaMessageCalled") {
            let { code, message: message2 } = res;
            (_a = callback.onCancelSendingMediaMessageCalled) == null ? void 0 : _a.call(callback, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("cancelSendingMediaMessage", resultCallback, { message });
    }
    /**
     * ‰∏ãËΩΩÂ™í‰ΩìÊ∂àÊÅØ
     * @param message  ÈúÄË¶Å‰∏ãËΩΩÁöÑÂ™í‰ΩìÊ∂àÊÅØÂÆû‰Ωì
     * @param listener ‰∏ãËΩΩÂ™í‰ΩìÊ∂àÊÅØÁöÑ‰∫ã‰ª∂ÁõëÂê¨
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMediaMessageDownloaded], [onMediaMessageDownloading]
     */
    downloadMediaMessage(message, listener) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (listener) {
        resultCallback = (res) => {
          var _a, _b, _c;
          if (res.callbackName === "onMediaMessageDownloading") {
            let { message: message2, progress } = res;
            (_a = listener.onMediaMessageDownloading) == null ? void 0 : _a.call(listener, { message: message2, progress });
          }
          if (res.callbackName === "onDownloadingMediaMessageCanceled") {
            let { message: message2 } = res;
            (_b = listener.onDownloadingMediaMessageCanceled) == null ? void 0 : _b.call(listener, { message: message2 });
          }
          if (res.callbackName === "onMediaMessageDownloaded") {
            let { code, message: message2 } = res;
            (_c = listener.onMediaMessageDownloaded) == null ? void 0 : _c.call(listener, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("downloadMediaMessage", resultCallback, { message });
    }
    /**
     * ÂèñÊ∂à‰∏ãËΩΩÂ™í‰ΩìÊ∂àÊÅØ
     * @param message  ÈúÄË¶ÅÂèñÊ∂à‰∏ãËΩΩÁöÑÂ™í‰ΩìÊ∂àÊÅØÂÆû‰Ωì
     * @param callback ÂèñÊ∂à‰∏ãËΩΩÂ™í‰ΩìÊ∂àÊÅØÁöÑ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onDownloadingMediaMessageCanceled]
     */
    cancelDownloadingMediaMessage(message, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onCancelDownloadingMediaMessageCalled") {
            let { code, message: message2 } = res;
            (_a = callback.onCancelDownloadingMediaMessageCalled) == null ? void 0 : _a.call(callback, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("cancelDownloadingMediaMessage", resultCallback, { message });
    }
    /**
     * Âä†ËΩΩÊüê‰∏™‰ºöËØù
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationLoaded]
     * @deprecated Áî® {@link #getConversation(RCIMIWConversationType, String, String, IRCIMIWGetConversationCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadConversation(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadConversation", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑ÂèñÊüê‰∏™‰ºöËØù
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ
     * @param callback  Ëé∑Âèñ‰ºöËØù‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationLoaded]
     */
    getConversation(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getConversation", resultCallback, { type, targetId, channelId });
    }
    /**
     * Âä†ËΩΩÊüê‰∫õ‰ºöËØù
     * @param conversationTypes ‰ºöËØùÁ±ªÂûã
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ
     * @param startTime         Êó∂Èó¥Êà≥ÔºàÊØ´ÁßíÔºâÔºåËé∑ÂèñÂ∞è‰∫éÊ≠§Êó∂Èó¥Êà≥ÁöÑ‰ºöËØùÔºå‰º† 0 ‰∏∫Êü•ËØ¢ÊúÄÊñ∞Êï∞ÊçÆ
     * @param count             Êü•ËØ¢ÁöÑÊï∞ÈáèÔºå 0 < count <= 50
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationsLoaded]
     * @deprecated Áî® {@link #getConversations(List, String, long, int, IRCIMIWGetConversationsCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadConversations(conversationTypes, channelId, startTime, count) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("startTime", startTime, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadConversations", resultCallback, {
        conversationTypes,
        channelId,
        startTime,
        count
      });
    }
    /**
     * Ëé∑ÂèñÊüê‰∫õ‰ºöËØù
     * @param conversationTypes ‰ºöËØùÁ±ªÂûã
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ
     * @param startTime         Êó∂Èó¥Êà≥ÔºàÊØ´ÁßíÔºâÔºåËé∑ÂèñÂ∞è‰∫éÊ≠§Êó∂Èó¥Êà≥ÁöÑ‰ºöËØùÔºå‰º† 0 ‰∏∫Êü•ËØ¢ÊúÄÊñ∞Êï∞ÊçÆ
     * @param count             Êü•ËØ¢ÁöÑÊï∞ÈáèÔºå 0 < count <= 50
     * @param callback          Ëé∑Âèñ‰ºöËØùÂàóË°®‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationsLoaded]
     */
    getConversations(conversationTypes, channelId, startTime, count, callback) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("startTime", startTime, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getConversations", resultCallback, {
        conversationTypes,
        channelId,
        startTime,
        count
      });
    }
    /**
     * Ëé∑ÂèñÊåáÂÆöÁ±ªÂûãÁöÑÂê´ÊúâÊú™ËØªÊ∂àÊÅØÁöÑ‰ºöËØùÂàóË°®
     * @param conversationTypes ÊîØÊåÅÂçïËÅä„ÄÅÁæ§ËÅä„ÄÅÁ≥ªÁªü‰ºöËØù
     * @param callback Ëé∑Âèñ‰ºöËØùÂàóË°®‰∫ã‰ª∂ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    getUnreadConversations(conversationTypes, callback) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUnreadConversations", resultCallback, { conversationTypes });
    }
    /**
     * ÁßªÈô§Êüê‰∏™‰ºöËØù
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ
     * @param callback  ÁßªÈô§‰ºöËØù‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationRemoved]
     */
    removeConversation(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onConversationRemoved") {
            let { code } = res;
            (_a = callback.onConversationRemoved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("removeConversation", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ê†πÊçÆ‰ºöËØùÁ±ªÂûãÁßªÈô§‰ºöËØù
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback          ÁßªÈô§‰ºöËØùÂàóË°®‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationsRemoved]
     */
    removeConversations(conversationTypes, channelId, callback) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onConversationsRemoved") {
            let { code } = res;
            (_a = callback.onConversationsRemoved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("removeConversations", resultCallback, { conversationTypes, channelId });
    }
    /**
     * Âä†ËΩΩÊüê‰∏™‰ºöËØùÁöÑÊú™ËØªÊï∞
     * Ê≥®Ôºö‰∏çÊîØÊåÅËÅäÂ§©ÂÆ§ÔºÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadCountLoaded]
     * @deprecated Áî® {@link #getUnreadCount(RCIMIWConversationType, String, String, IRCIMIWGetUnreadCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUnreadCount(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUnreadCount", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑ÂèñÊüê‰∏™‰ºöËØùÁöÑÊú™ËØªÊï∞
     * Ê≥®Ôºö‰∏çÊîØÊåÅËÅäÂ§©ÂÆ§ÔºÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  Ëé∑Âèñ‰ºöËØùÊú™ËØªÊï∞‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadCountLoaded]
     */
    getUnreadCount(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUnreadCount", resultCallback, { type, targetId, channelId });
    }
    /**
     * Âä†ËΩΩÊâÄÊúâÊú™ËØªÊï∞
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onTotalUnreadCountLoaded]
     * @deprecated Áî® {@link #getTotalUnreadCount(String, IRCIMIWGetTotalUnreadCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadTotalUnreadCount(channelId) {
      if (!validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadTotalUnreadCount", resultCallback, { channelId });
    }
    /**
     * Ëé∑ÂèñÊâÄÊúâÊú™ËØªÊï∞
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  Ëé∑ÂèñÊâÄÊúâÊú™ËØªÊï∞‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onTotalUnreadCountLoaded]
     */
    getTotalUnreadCount(channelId, callback) {
      if (!validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getTotalUnreadCount", resultCallback, { channelId });
    }
    /**
     * Âä†ËΩΩ‰ºöËØù‰∏≠Êú™ËØªÁöÑ @ Ê∂àÊÅØÊï∞Èáè„ÄÇ
     * Ê≥®Ôºö‰∏çÊîØÊåÅËÅäÂ§©ÂÆ§ÔºÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadMentionedCountLoaded]
     * @deprecated Áî® {@link #getUnreadMentionedCount(RCIMIWConversationType, String, String, IRCIMIWGetUnreadMentionedCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUnreadMentionedCount(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUnreadMentionedCount", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑Âèñ‰ºöËØù‰∏≠Êú™ËØªÁöÑ @ Ê∂àÊÅØÊï∞Èáè„ÄÇ
     * Ê≥®Ôºö‰∏çÊîØÊåÅËÅäÂ§©ÂÆ§ÔºÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  Ëé∑Âèñ‰ºöËØù‰∏≠Êú™ËØªÁöÑ @ Ê∂àÊÅØÊï∞Èáè‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadMentionedCountLoaded]
     */
    getUnreadMentionedCount(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUnreadMentionedCount", resultCallback, { type, targetId, channelId });
    }
    /**
     * Âä†ËΩΩÂΩìÂâçÁî®Êà∑Âä†ÂÖ•ÁöÑÊâÄÊúâË∂ÖÁ∫ßÁæ§‰ºöËØùÁöÑÊú™ËØªÊ∂àÊÅØÊï∞ÁöÑÊÄªÂíå„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupAllUnreadCountLoaded]
     * @deprecated Áî® {@link #getUltraGroupAllUnreadCount(IRCIMIWGetUltraGroupAllUnreadCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUltraGroupAllUnreadCount() {
      let resultCallback;
      return this._invokeMethod("loadUltraGroupAllUnreadCount", resultCallback, {});
    }
    /**
     * Ëé∑ÂèñÂΩìÂâçÁî®Êà∑Âä†ÂÖ•ÁöÑÊâÄÊúâË∂ÖÁ∫ßÁæ§‰ºöËØùÁöÑÊú™ËØªÊ∂àÊÅØÊï∞ÁöÑÊÄªÂíå„ÄÇ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupAllUnreadCountLoaded]
     */
    getUltraGroupAllUnreadCount(callback) {
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUltraGroupAllUnreadCount", resultCallback, {});
    }
    /**
     * Âä†ËΩΩÂΩìÂâçÁî®Êà∑Âä†ÂÖ•ÁöÑÊâÄÊúâË∂ÖÁ∫ßÁæ§‰ºöËØù‰∏≠ÁöÑÊú™ËØª @ Ê∂àÊÅØÊï∞ÁöÑÊÄªÂíå„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupAllUnreadMentionedCountLoaded]
     * @deprecated Áî® {@link #getUltraGroupAllUnreadMentionedCount(IRCIMIWGetUltraGroupAllUnreadMentionedCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUltraGroupAllUnreadMentionedCount() {
      let resultCallback;
      return this._invokeMethod("loadUltraGroupAllUnreadMentionedCount", resultCallback, {});
    }
    /**
     * Ëé∑ÂèñÂΩìÂâçÁî®Êà∑Âä†ÂÖ•ÁöÑÊâÄÊúâË∂ÖÁ∫ßÁæ§‰ºöËØù‰∏≠ÁöÑÊú™ËØª @ Ê∂àÊÅØÊï∞ÁöÑÊÄªÂíå„ÄÇ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupAllUnreadMentionedCountLoaded]
     */
    getUltraGroupAllUnreadMentionedCount(callback) {
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUltraGroupAllUnreadMentionedCount", resultCallback, {});
    }
    /**
     * Ëé∑ÂèñÊåáÂÆö‰ºöËØùÁöÑÊú™ËØªÊ∂àÊÅØÊï∞
     * @param targetId ‰ºöËØù ID
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupUnreadCountLoaded]
     * @deprecated Áî® {@link #getUltraGroupUnreadCount(String, IRCIMIWGetUltraGroupUnreadCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUltraGroupUnreadCount(targetId) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUltraGroupUnreadCount", resultCallback, { targetId });
    }
    /**
     * Ëé∑ÂèñÊåáÂÆö‰ºöËØùÁöÑÊú™ËØªÊ∂àÊÅØÊï∞
     * @param targetId ‰ºöËØù ID
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupUnreadCountLoaded]
     */
    getUltraGroupUnreadCount(targetId, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUltraGroupUnreadCount", resultCallback, { targetId });
    }
    /**
     * Ëé∑ÂèñË∂ÖÁ∫ßÁæ§‰ºöËØù‰∏≠Ë¢´ @ ÁöÑÊ∂àÊÅØÊï∞
     * @param targetId ‰ºöËØù ID
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupUnreadMentionedCountLoaded]
     * @deprecated Áî® {@link #getUltraGroupUnreadMentionedCount(String, IRCIMIWGetUltraGroupUnreadMentionedCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUltraGroupUnreadMentionedCount(targetId) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUltraGroupUnreadMentionedCount", resultCallback, { targetId });
    }
    /**
     * Ëé∑ÂèñË∂ÖÁ∫ßÁæ§‰ºöËØù‰∏≠Ë¢´ @ ÁöÑÊ∂àÊÅØÊï∞
     * @param targetId ‰ºöËØù ID
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupUnreadMentionedCountLoaded]
     */
    getUltraGroupUnreadMentionedCount(targetId, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUltraGroupUnreadMentionedCount", resultCallback, { targetId });
    }
    /**
     * Ê†πÊçÆ‰ºöËØùÁ±ªÂûãÂä†ËΩΩÊú™ËØªÊï∞
     * Ê≥®Ôºö‰∏çÊîØÊåÅËÅäÂ§©ÂÆ§ÔºÅ
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param contain           ÊòØÂê¶ÂåÖÂê´ÂÖçÊâìÊâ∞Ê∂àÊÅØÁöÑÊú™ËØªÊ∂àÊÅØÊï∞„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadCountByConversationTypesLoaded]
     * @deprecated Áî® {@link #getUnreadCountByConversationTypes(List, String, boolean, IRCIMIWGetUnreadCountByConversationTypesCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUnreadCountByConversationTypes(conversationTypes, channelId, contain) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("contain", contain, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUnreadCountByConversationTypes", resultCallback, {
        conversationTypes,
        channelId,
        contain
      });
    }
    /**
     * Ê†πÊçÆ‰ºöËØùÁ±ªÂûãÂä†ËΩΩÊú™ËØªÊï∞
     * Ê≥®Ôºö‰∏çÊîØÊåÅËÅäÂ§©ÂÆ§ÔºÅ
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param contain           ÊòØÂê¶ÂåÖÂê´ÂÖçÊâìÊâ∞Ê∂àÊÅØÁöÑÊú™ËØªÊ∂àÊÅØÊï∞„ÄÇ
     * @param callback          ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadCountByConversationTypesLoaded]
     */
    getUnreadCountByConversationTypes(conversationTypes, channelId, contain, callback) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("contain", contain, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUnreadCountByConversationTypes", resultCallback, {
        conversationTypes,
        channelId,
        contain
      });
    }
    /**
     * Ê∏ÖÈô§Êüê‰∏™‰ºöËØù‰∏≠ÁöÑÊú™ËØªÊ∂àÊÅØÊï∞„ÄÇ
     * Ê≥®Ôºö‰∏çÊîØÊåÅËÅäÂ§©ÂÆ§ÔºÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param timestamp ËØ•‰ºöËØùÂ∑≤ÈòÖËØªÁöÑÊúÄÂêé‰∏ÄÊù°Ê∂àÊÅØÁöÑÂèëÈÄÅÊó∂Èó¥Êà≥ÔºåÊ∏ÖÈô§ÊâÄÊúâ‰º†ÂÖ•ÂΩìÂâçÊúÄÊñ∞Êó∂Èó¥Êà≥
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadCountCleared]
     */
    clearUnreadCount(type, targetId, channelId, timestamp, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("timestamp", timestamp, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUnreadCountCleared") {
            let { code } = res;
            (_a = callback.onUnreadCountCleared) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("clearUnreadCount", resultCallback, { type, targetId, channelId, timestamp });
    }
    /**
     * ‰øùÂ≠ò‰ºöËØùËçâÁ®ø‰ø°ÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param draft     ËçâÁ®øÁöÑÊñáÂ≠óÂÜÖÂÆπ„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onDraftMessageSaved]
     */
    saveDraftMessage(type, targetId, channelId, draft, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("draft", draft, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onDraftMessageSaved") {
            let { code } = res;
            (_a = callback.onDraftMessageSaved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("saveDraftMessage", resultCallback, { type, targetId, channelId, draft });
    }
    /**
     * Âä†ËΩΩ‰ºöËØù‰∏≠ÁöÑËçâÁ®ø‰ø°ÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onDraftMessageLoaded]
     * @deprecated Áî® {@link #getDraftMessage(RCIMIWConversationType, String, String, IRCIMIWGetDraftMessageCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadDraftMessage(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadDraftMessage", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑Âèñ‰ºöËØù‰∏≠ÁöÑËçâÁ®ø‰ø°ÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onDraftMessageLoaded]
     */
    getDraftMessage(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getDraftMessage", resultCallback, { type, targetId, channelId });
    }
    /**
     * Âà†Èô§ÊåáÂÆö‰ºöËØù‰∏≠ÁöÑËçâÁ®ø‰ø°ÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onDraftMessageCleared]
     */
    clearDraftMessage(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onDraftMessageCleared") {
            let { code } = res;
            (_a = callback.onDraftMessageCleared) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("clearDraftMessage", resultCallback, { type, targetId, channelId });
    }
    /**
     * Âä†ËΩΩÂÖçÊâìÊâ∞ÁöÑ‰ºöËØùÂàóË°®„ÄÇ
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlockedConversationsLoaded]
     * @deprecated Áî® {@link #getBlockedConversations(List, String, IRCIMIWGetBlockedConversationsCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadBlockedConversations(conversationTypes, channelId) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadBlockedConversations", resultCallback, { conversationTypes, channelId });
    }
    /**
     * Ëé∑ÂèñÂÖçÊâìÊâ∞ÁöÑ‰ºöËØùÂàóË°®„ÄÇ
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback          ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlockedConversationsLoaded]
     */
    getBlockedConversations(conversationTypes, channelId, callback) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getBlockedConversations", resultCallback, { conversationTypes, channelId });
    }
    /**
     * ËÆæÁΩÆ‰ºöËØùÁöÑÁΩÆÈ°∂Áä∂ÊÄÅ„ÄÇËã•‰ºöËØù‰∏çÂ≠òÂú®ÔºåË∞ÉÁî®Ê≠§ÊñπÊ≥ï SDK Ëá™Âä®ÂàõÂª∫‰ºöËØùÂπ∂ÁΩÆÈ°∂„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param top       ÊòØÂê¶ÁΩÆÈ°∂
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationTopStatusChanged]
     */
    changeConversationTopStatus(type, targetId, channelId, top, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("top", top, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onConversationTopStatusChanged") {
            let { code } = res;
            (_a = callback.onConversationTopStatusChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeConversationTopStatus", resultCallback, { type, targetId, channelId, top });
    }
    /**
     * Âä†ËΩΩ‰ºöËØùÁöÑÁΩÆÈ°∂Áä∂ÊÄÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationTopStatusLoaded]
     * @deprecated Áî® {@link #getConversationTopStatus(RCIMIWConversationType, String, String, IRCIMIWGetConversationTopStatusCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadConversationTopStatus(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadConversationTopStatus", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑Âèñ‰ºöËØùÁöÑÁΩÆÈ°∂Áä∂ÊÄÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationTopStatusLoaded]
     */
    getConversationTopStatus(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getConversationTopStatus", resultCallback, { type, targetId, channelId });
    }
    /**
     * ÂêåÊ≠•‰ºöËØùÈòÖËØªÁä∂ÊÄÅ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param timestamp ‰ºöËØù‰∏≠Â∑≤ËØªÁöÑÊúÄÂêé‰∏ÄÊù°Ê∂àÊÅØÁöÑÂèëÈÄÅÊó∂Èó¥Êà≥
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationReadStatusSynced]
     */
    syncConversationReadStatus(type, targetId, channelId, timestamp, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("timestamp", timestamp, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onConversationReadStatusSynced") {
            let { code } = res;
            (_a = callback.onConversationReadStatusSynced) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("syncConversationReadStatus", resultCallback, {
        type,
        targetId,
        channelId,
        timestamp
      });
    }
    /**
     * Âêë‰ºöËØù‰∏≠ÂèëÈÄÅÊ≠£Âú®ËæìÂÖ•ÁöÑÁä∂ÊÄÅÔºåÁõÆÂâçÂè™ÊîØÊåÅÂçïËÅä„ÄÇ
     * @param type        ‰ºöËØùÁ±ªÂûã
     * @param targetId    ‰ºöËØù ID
     * @param channelId   È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param currentType ÂΩìÂâçÁöÑÁä∂ÊÄÅ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    sendTypingStatus(type, targetId, channelId, currentType) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("currentType", currentType, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("sendTypingStatus", resultCallback, { type, targetId, channelId, currentType });
    }
    /**
     * Âä†ËΩΩÂéÜÂè≤Ê∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param sentTime  ÂΩìÂâçÊ∂àÊÅØÊó∂Èó¥Êà≥
     * @param order     Ëé∑ÂèñÊ∂àÊÅØÁöÑÊñπÂêë„ÄÇBEFOREÔºöËé∑Âèñ sentTime ‰πãÂâçÁöÑÊ∂àÊÅØ ÔºàÊó∂Èó¥ÈÄíÂáèÔºâÔºåAFTERÔºöËé∑Âèñ sentTime ‰πãÂêéÁöÑÊ∂àÊÅØ ÔºàÊó∂Èó¥ÈÄíÂ¢ûÔºâ
     * @param policy    Ê∂àÊÅØÁöÑÂä†ËΩΩÁ≠ñÁï•„ÄÇLOCALÔºöÂè™Âä†ËΩΩÊú¨Âú∞ÔºåREMOTEÔºöÂè™Âä†ËΩΩËøúÁ´ØÔºåLOCAL_REMOTEÔºöÊú¨Âú∞ËøúÁ´ØÈÉΩÂä†ËΩΩ
     * @param count     Ëé∑ÂèñÁöÑÊ∂àÊÅØÊï∞ÈáèÔºå0 < count <= 20
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesLoaded]
     * @deprecated Áî® {@link #getMessages(RCIMIWConversationType, String, String, long, RCIMIWTimeOrder, RCIMIWMessageOperationPolicy, int, IRCIMIWGetMessagesCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadMessages(type, targetId, channelId, sentTime, order, policy, count) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("sentTime", sentTime, AssertRules.NUMBER, true) || !validate("order", order, AssertRules.NUMBER, true) || !validate("policy", policy, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadMessages", resultCallback, {
        type,
        targetId,
        channelId,
        sentTime,
        order,
        policy,
        count
      });
    }
    /**
     * Âä†ËΩΩÂéÜÂè≤Ê∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param sentTime  ÂΩìÂâçÊ∂àÊÅØÊó∂Èó¥Êà≥
     * @param order     Ëé∑ÂèñÊ∂àÊÅØÁöÑÊñπÂêë„ÄÇBEFOREÔºöËé∑Âèñ sentTime ‰πãÂâçÁöÑÊ∂àÊÅØ ÔºàÊó∂Èó¥ÈÄíÂáèÔºâÔºåAFTERÔºöËé∑Âèñ sentTime ‰πãÂêéÁöÑÊ∂àÊÅØ ÔºàÊó∂Èó¥ÈÄíÂ¢ûÔºâ
     * @param policy    Ê∂àÊÅØÁöÑÂä†ËΩΩÁ≠ñÁï•„ÄÇLOCALÔºöÂè™Âä†ËΩΩÊú¨Âú∞ÔºåREMOTEÔºöÂè™Âä†ËΩΩËøúÁ´ØÔºåLOCAL_REMOTEÔºöÊú¨Âú∞ËøúÁ´ØÈÉΩÂä†ËΩΩ
     * @param count     Ëé∑ÂèñÁöÑÊ∂àÊÅØÊï∞ÈáèÔºå0 < count <= 20
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesLoaded]
     */
    getMessages(type, targetId, channelId, sentTime, order, policy, count, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("sentTime", sentTime, AssertRules.NUMBER, true) || !validate("order", order, AssertRules.NUMBER, true) || !validate("policy", policy, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getMessages", resultCallback, {
        type,
        targetId,
        channelId,
        sentTime,
        order,
        policy,
        count
      });
    }
    /**
     * Ê†πÊçÆÊ∂àÊÅØ id Ëé∑ÂèñÊ∂àÊÅØ‰ΩìÔºàÊú¨Âú∞Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂîØ‰∏ÄÂÄºÔºâ„ÄÇ
     * @param messageId Ê∂àÊÅØÁöÑ messageIdÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑Âèñ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    getMessageById(messageId, callback) {
      if (!validate("messageId", messageId, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getMessageById", resultCallback, { messageId });
    }
    /**
     * ÈÄöËøáÂÖ®Â±ÄÂîØ‰∏Ä id Ëé∑ÂèñÊ∂àÊÅØÂÆû‰Ωì„ÄÇ
     * @param messageUId Ê∂àÊÅØÁöÑ messageUidÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑ÂèñÔºå‰∏îÂè™ÊúâÂèëÈÄÅÊàêÂäüÁöÑÊ∂àÊÅØÊâç‰ºöÊúâÂÄº„ÄÇ
     * @param callback   ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    getMessageByUId(messageUId, callback) {
      if (!validate("messageUId", messageUId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getMessageByUId", resultCallback, { messageUId });
    }
    /**
     * Âä†ËΩΩÁ¨¨‰∏ÄÊù°Êú™ËØªÊ∂àÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onFirstUnreadMessageLoaded]
     * @deprecated Áî® {@link #getFirstUnreadMessage(RCIMIWConversationType, String, String, IRCIMIWGetFirstUnreadMessageCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadFirstUnreadMessage(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadFirstUnreadMessage", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑ÂèñÁ¨¨‰∏ÄÊù°Êú™ËØªÊ∂àÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onFirstUnreadMessageLoaded]
     */
    getFirstUnreadMessage(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getFirstUnreadMessage", resultCallback, { type, targetId, channelId });
    }
    /**
     * Âä†ËΩΩ‰ºöËØù‰∏≠Êú™ËØªÁöÑ @ Ê∂àÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadMentionedMessagesLoaded]
     * @deprecated Áî® {@link #getUnreadMentionedMessages(RCIMIWConversationType, String, String, IRCIMIWGetUnreadMentionedMessagesCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUnreadMentionedMessages(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUnreadMentionedMessages", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑Âèñ‰ºöËØù‰∏≠Êú™ËØªÁöÑ @ Ê∂àÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUnreadMentionedMessagesLoaded]
     */
    getUnreadMentionedMessages(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUnreadMentionedMessages", resultCallback, { type, targetId, channelId });
    }
    /**
     * ÊèíÂÖ•‰∏ÄÊù°Ê∂àÊÅØ
     * @param message  ÊèíÂÖ•ÁöÑÊ∂àÊÅØ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageInserted]
     */
    insertMessage(message, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessageInserted") {
            let { code, message: message2 } = res;
            (_a = callback.onMessageInserted) == null ? void 0 : _a.call(callback, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("insertMessage", resultCallback, { message });
    }
    /**
     * ÊèíÂÖ•Â§öÊù°Ê∂àÊÅØÔºå‰∏çÊîØÊåÅË∂ÖÁ∫ßÁæ§
     * @param messages ÊèíÂÖ•ÁöÑÊ∂àÊÅØÈõÜÂêà
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesInserted]
     */
    insertMessages(messages, callback) {
      if (!validate("messages", messages, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessagesInserted") {
            let { code, messages: messages2 } = res;
            (_a = callback.onMessagesInserted) == null ? void 0 : _a.call(callback, { code, messages: messages2 });
          }
        };
      }
      return this._invokeMethod("insertMessages", resultCallback, { messages });
    }
    /**
     * Ê∏ÖÈô§Ê∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param timestamp Ê∏ÖÈô§Ê∂àÊÅØÊà™Ê≠¢Êó∂Èó¥Êà≥Ôºå0 <= recordTime <= ÂΩìÂâç‰ºöËØùÊúÄÂêé‰∏ÄÊù°Ê∂àÊÅØÁöÑ sentTime, 0 Ê∏ÖÈô§ÊâÄÊúâÊ∂àÊÅØÔºåÂÖ∂‰ªñÂÄºÊ∏ÖÈô§Â∞è‰∫éÁ≠â‰∫é recordTime ÁöÑÊ∂àÊÅØ
     * @param policy    Ê∏ÖÈô§ÁöÑÁ≠ñÁï•
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesCleared]
     */
    clearMessages(type, targetId, channelId, timestamp, policy, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("timestamp", timestamp, AssertRules.NUMBER, true) || !validate("policy", policy, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessagesCleared") {
            let { code } = res;
            (_a = callback.onMessagesCleared) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("clearMessages", resultCallback, { type, targetId, channelId, timestamp, policy });
    }
    /**
     * Âà†Èô§Êú¨Âú∞Ê∂àÊÅØ
     * @param messages Ê∂àÊÅØÈõÜÂêà
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onLocalMessagesDeleted]
     */
    deleteLocalMessages(messages, callback) {
      if (!validate("messages", messages, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onLocalMessagesDeleted") {
            let { code, messages: messages2 } = res;
            (_a = callback.onLocalMessagesDeleted) == null ? void 0 : _a.call(callback, { code, messages: messages2 });
          }
        };
      }
      return this._invokeMethod("deleteLocalMessages", resultCallback, { messages });
    }
    /**
     * Âà†Èô§Ê∂àÊÅØ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param messages  Ê∂àÊÅØÈõÜÂêà
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesDeleted]
     */
    deleteMessages(type, targetId, channelId, messages, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("messages", messages, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessagesDeleted") {
            let { code, messages: messages2 } = res;
            (_a = callback.onMessagesDeleted) == null ? void 0 : _a.call(callback, { code, messages: messages2 });
          }
        };
      }
      return this._invokeMethod("deleteMessages", resultCallback, { type, targetId, channelId, messages });
    }
    /**
     * Êí§ÂõûÊ∂àÊÅØ
     * @param message  ÈúÄË¶ÅË¢´Êí§ÂõûÁöÑÊ∂àÊÅØ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageRecalled]
     */
    recallMessage(message, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessageRecalled") {
            let { code, message: message2 } = res;
            (_a = callback.onMessageRecalled) == null ? void 0 : _a.call(callback, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("recallMessage", resultCallback, { message });
    }
    /**
     * ÂèëÈÄÅÊüê‰∏™‰ºöËØù‰∏≠ÁöÑÊ∂àÊÅØÈòÖËØªÂõûÊâß
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param timestamp ËØ•‰ºöËØù‰∏≠Â∑≤ËØªÁöÑÊúÄÂêé‰∏ÄÊù°Ê∂àÊÅØÁöÑÂèëÈÄÅÊó∂Èó¥Êà≥
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onPrivateReadReceiptMessageSent]
     */
    sendPrivateReadReceiptMessage(targetId, channelId, timestamp, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("timestamp", timestamp, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onPrivateReadReceiptMessageSent") {
            let { code } = res;
            (_a = callback.onPrivateReadReceiptMessageSent) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("sendPrivateReadReceiptMessage", resultCallback, { targetId, channelId, timestamp });
    }
    /**
     * ÂèëËµ∑Áæ§ËÅäÊ∂àÊÅØÂ∑≤ËØªÂõûÊâßËØ∑Ê±Ç
     * @param message  ÈúÄË¶ÅËØ∑Ê±ÇÂ∑≤ËØªÂõûÊâßÁöÑÊ∂àÊÅØ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onGroupReadReceiptRequestSent]
     */
    sendGroupReadReceiptRequest(message, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onGroupReadReceiptRequestSent") {
            let { code, message: message2 } = res;
            (_a = callback.onGroupReadReceiptRequestSent) == null ? void 0 : _a.call(callback, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("sendGroupReadReceiptRequest", resultCallback, { message });
    }
    /**
     * ÂèëÈÄÅÁæ§ËÅäÂ∑≤ËØªÂõûÊâß
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param messages  ‰ºöËØù‰∏≠ÈúÄË¶ÅÂèëÈÄÅÂ∑≤ËØªÂõûÊâßÁöÑÊ∂àÊÅØÂàóË°®
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onGroupReadReceiptResponseSent]
     */
    sendGroupReadReceiptResponse(targetId, channelId, messages, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("messages", messages, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onGroupReadReceiptResponseSent") {
            let { code, message } = res;
            (_a = callback.onGroupReadReceiptResponseSent) == null ? void 0 : _a.call(callback, { code, message });
          }
        };
      }
      return this._invokeMethod("sendGroupReadReceiptResponse", resultCallback, { targetId, channelId, messages });
    }
    /**
     * Êõ¥Êñ∞Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØ
     * ÊØèÊù°Ê∂àÊÅØÊê∫Â∏¶Êâ©Â±ï‰ø°ÊÅØÈîÆÂÄºÂØπÊúÄÂ§ßÂÄº 300‰∏™ÔºåÂçïÊ¨°ËÆæÁΩÆÊâ©Â±ï‰ø°ÊÅØÈîÆÂÄºÂØπÊúÄÂ§ßÂÄº 20‰∏™
     * @param messageUId Ê∂àÊÅØÁöÑ messageUidÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑ÂèñÔºå‰∏îÂè™ÊúâÂèëÈÄÅÊàêÂäüÁöÑÊ∂àÊÅØÊâç‰ºöÊúâÂÄº
     * @param expansion  Ë¶ÅÊõ¥Êñ∞ÁöÑÊ∂àÊÅØÊâ©Â±ï‰ø°ÊÅØÈîÆÂÄºÂØπÔºåÁ±ªÂûãÊòØ HashMapÔºõKey ÊîØÊåÅÂ§ßÂ∞èÂÜôËã±ÊñáÂ≠óÊØç„ÄÅÊï∞Â≠ó„ÄÅÈÉ®ÂàÜÁâπÊÆäÁ¨¶Âè∑ + = - _ ÁöÑÁªÑÂêàÊñπÂºèÔºå‰∏çÊîØÊåÅÊ±âÂ≠ó„ÄÇValue ÂèØ‰ª•ËæìÂÖ•Á©∫Ê†º
     * @param callback   ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageExpansionUpdated]
     */
    updateMessageExpansion(messageUId, expansion, callback) {
      if (!validate("messageUId", messageUId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessageExpansionUpdated") {
            let { code } = res;
            (_a = callback.onMessageExpansionUpdated) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("updateMessageExpansion", resultCallback, { messageUId, expansion });
    }
    /**
     * Âà†Èô§Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØ‰∏≠ÁâπÂÆöÁöÑÈîÆÂÄºÂØπ
     * @param messageUId Ê∂àÊÅØÁöÑ messageUidÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑ÂèñÔºå‰∏îÂè™ÊúâÂèëÈÄÅÊàêÂäüÁöÑÊ∂àÊÅØÊâç‰ºöÊúâÂÄº
     * @param keys       Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØ‰∏≠ÂæÖÂà†Èô§ÁöÑ key ÁöÑÂàóË°®ÔºåÁ±ªÂûãÊòØ ArrayList
     * @param callback   ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageExpansionForKeysRemoved]
     */
    removeMessageExpansionForKeys(messageUId, keys, callback) {
      if (!validate("messageUId", messageUId, AssertRules.STRING, true) || !validate("keys", keys, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessageExpansionForKeysRemoved") {
            let { code } = res;
            (_a = callback.onMessageExpansionForKeysRemoved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("removeMessageExpansionForKeys", resultCallback, { messageUId, keys });
    }
    /**
     * ËÆæÁΩÆÊ∂àÊÅØÂèëÈÄÅÁä∂ÊÄÅ„ÄÇ
     * @param messageId  Ê∂àÊÅØÁöÑ messageIdÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑Âèñ
     * @param sentStatus Ë¶Å‰øÆÊîπÁöÑÁä∂ÊÄÅ
     * @param callback   ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageSentStatusChanged]
     */
    changeMessageSentStatus(messageId, sentStatus, callback) {
      if (!validate("messageId", messageId, AssertRules.NUMBER, true) || !validate("sentStatus", sentStatus, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessageSentStatusChanged") {
            let { code } = res;
            (_a = callback.onMessageSentStatusChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeMessageSentStatus", resultCallback, { messageId, sentStatus });
    }
    /**
     * ËÆæÁΩÆÊ∂àÊÅØÊé•Êî∂Áä∂ÊÄÅ„ÄÇ
     * @param messageId      Ê∂àÊÅØÁöÑ messageIdÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑Âèñ
     * @param receivedStatus Ë¶Å‰øÆÊîπÁöÑÁä∂ÊÄÅ
     * @param callback       ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageReceiveStatusChanged]
     */
    changeMessageReceiveStatus(messageId, receivedStatus, callback) {
      if (!validate("messageId", messageId, AssertRules.NUMBER, true) || !validate("receivedStatus", receivedStatus, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onMessageReceiveStatusChanged") {
            let { code } = res;
            (_a = callback.onMessageReceiveStatusChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeMessageReceiveStatus", resultCallback, { messageId, receivedStatus });
    }
    /**
     * Âä†ÂÖ•ËÅäÂ§©ÂÆ§„ÄÇ
     * @param targetId     ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param messageCount ËøõÂÖ•ËÅäÂ§©ÂÆ§ÊãâÂèñÊ∂àÊÅØÊï∞ÁõÆÔºå-1 Êó∂‰∏çÊãâÂèñ‰ªª‰ΩïÊ∂àÊÅØÔºå0 Êó∂ÊãâÂèñ 10 Êù°Ê∂àÊÅØÔºåÊúÄÂ§öÂè™ËÉΩÊãâÂèñ 50
     * @param autoCreate   ÊòØÂê¶ÂàõÂª∫ËÅäÂ§©ÂÆ§ÔºåTRUE Â¶ÇÊûúËÅäÂ§©ÂÆ§‰∏çÂ≠òÂú®Ôºåsdk ‰ºöÂàõÂª∫ËÅäÂ§©ÂÆ§Âπ∂Âä†ÂÖ•ÔºåÂ¶ÇÊûúÂ∑≤Â≠òÂú®ÔºåÂàôÁõ¥Êé•Âä†ÂÖ•
     * @param callback     ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomJoined]
     */
    joinChatRoom(targetId, messageCount, autoCreate, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("messageCount", messageCount, AssertRules.NUMBER, true) || !validate("autoCreate", autoCreate, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onChatRoomJoined") {
            let { code, targetId: targetId2 } = res;
            (_a = callback.onChatRoomJoined) == null ? void 0 : _a.call(callback, { code, targetId: targetId2 });
          }
        };
      }
      return this._invokeMethod("joinChatRoom", resultCallback, { targetId, messageCount, autoCreate });
    }
    /**
     * ÈÄÄÂá∫ËÅäÂ§©ÂÆ§„ÄÇ
     * @param targetId ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomLeft]
     */
    leaveChatRoom(targetId, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onChatRoomLeft") {
            let { code, targetId: targetId2 } = res;
            (_a = callback.onChatRoomLeft) == null ? void 0 : _a.call(callback, { code, targetId: targetId2 });
          }
        };
      }
      return this._invokeMethod("leaveChatRoom", resultCallback, { targetId });
    }
    /**
     * Âä†ËΩΩËÅäÂ§©ÂÆ§ÂéÜÂè≤Ê∂àÊÅØËÆ∞ÂΩï„ÄÇ
     * Ê≥®ÔºöÂøÖÈ°ªÂÖàÂºÄÈÄöËÅäÂ§©ÂÆ§Ê∂àÊÅØ‰∫ëÂ≠òÂÇ®ÂäüËÉΩ„ÄÇ
     * @param targetId  ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param timestamp Ëµ∑ÂßãÁöÑÊ∂àÊÅØÂèëÈÄÅÊó∂Èó¥Êà≥
     * @param order     ÊãâÂèñÈ°∫Â∫è 0:ÂÄíÂ∫èÔºå1:Ê≠£Â∫è
     * @param count     Ë¶ÅËé∑ÂèñÁöÑÊ∂àÊÅØÊï∞ÈáèÔºå0 < count <= 50„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomMessagesLoaded]
     * @deprecated Áî® {@link #getChatRoomMessages(String, long, RCIMIWTimeOrder, int, IRCIMIWGetChatRoomMessagesCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadChatRoomMessages(targetId, timestamp, order, count) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("timestamp", timestamp, AssertRules.NUMBER, true) || !validate("order", order, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadChatRoomMessages", resultCallback, { targetId, timestamp, order, count });
    }
    /**
     * Ëé∑ÂèñËÅäÂ§©ÂÆ§ÂéÜÂè≤Ê∂àÊÅØËÆ∞ÂΩï„ÄÇ
     * Ê≥®ÔºöÂøÖÈ°ªÂÖàÂºÄÈÄöËÅäÂ§©ÂÆ§Ê∂àÊÅØ‰∫ëÂ≠òÂÇ®ÂäüËÉΩ„ÄÇ
     * @param targetId  ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param timestamp Ëµ∑ÂßãÁöÑÊ∂àÊÅØÂèëÈÄÅÊó∂Èó¥Êà≥
     * @param order     ÊãâÂèñÈ°∫Â∫è 0:ÂÄíÂ∫èÔºå1:Ê≠£Â∫è
     * @param count     Ë¶ÅËé∑ÂèñÁöÑÊ∂àÊÅØÊï∞ÈáèÔºå0 < count <= 50„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomMessagesLoaded]
     */
    getChatRoomMessages(targetId, timestamp, order, count, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("timestamp", timestamp, AssertRules.NUMBER, true) || !validate("order", order, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getChatRoomMessages", resultCallback, { targetId, timestamp, order, count });
    }
    /**
     * ËÆæÁΩÆËÅäÂ§©ÂÆ§Ëá™ÂÆö‰πâÂ±ûÊÄß„ÄÇ
     * @param targetId       ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param key            ËÅäÂ§©ÂÆ§Â±ûÊÄßÂêçÁß∞ÔºåKey ÊîØÊåÅÂ§ßÂ∞èÂÜôËã±ÊñáÂ≠óÊØç„ÄÅÊï∞Â≠ó„ÄÅÈÉ®ÂàÜÁâπÊÆäÁ¨¶Âè∑ + = - _ ÁöÑÁªÑÂêàÊñπÂºèÔºåÊúÄÂ§ßÈïøÂ∫¶ 128 ‰∏™Â≠óÁ¨¶
     * @param value          ËÅäÂ§©ÂÆ§Â±ûÊÄßÂØπÂ∫îÁöÑÂÄºÔºåÊúÄÂ§ßÈïøÂ∫¶ 4096 ‰∏™Â≠óÁ¨¶
     * @param deleteWhenLeft Áî®Êà∑ÊéâÁ∫øÊàñÈÄÄÂá∫Êó∂ÔºåÊòØÂê¶Ëá™Âä®Âà†Èô§ËØ• Key„ÄÅValue ÂÄº
     * @param overwrite      Â¶ÇÊûúÂΩìÂâç key Â≠òÂú®ÔºåÊòØÂê¶ËøõË°åË¶ÜÁõñ
     * @param callback       ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomEntryAdded]
     */
    addChatRoomEntry(targetId, key, value, deleteWhenLeft, overwrite, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("key", key, AssertRules.STRING, true) || !validate("value", value, AssertRules.STRING, true) || !validate("deleteWhenLeft", deleteWhenLeft, AssertRules.BOOLEAN, true) || !validate("overwrite", overwrite, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onChatRoomEntryAdded") {
            let { code } = res;
            (_a = callback.onChatRoomEntryAdded) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("addChatRoomEntry", resultCallback, {
        targetId,
        key,
        value,
        deleteWhenLeft,
        overwrite
      });
    }
    /**
     * ÊâπÈáèËÆæÁΩÆËÅäÂ§©ÂÆ§Ëá™ÂÆö‰πâÂ±ûÊÄß
     * @param targetId       ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param entries        ËÅäÂ§©ÂÆ§Â±ûÊÄß
     * @param deleteWhenLeft Áî®Êà∑ÊéâÁ∫øÊàñÈÄÄÂá∫Êó∂ÔºåÊòØÂê¶Ëá™Âä®Âà†Èô§ËØ• Key„ÄÅValue ÂÄº
     * @param overwrite      ÊòØÂê¶Âº∫Âà∂Ë¶ÜÁõñ
     * @param callback       ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomEntriesAdded]
     */
    addChatRoomEntries(targetId, entries, deleteWhenLeft, overwrite, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("deleteWhenLeft", deleteWhenLeft, AssertRules.BOOLEAN, true) || !validate("overwrite", overwrite, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onChatRoomEntriesAdded") {
            let { code, errors } = res;
            (_a = callback.onChatRoomEntriesAdded) == null ? void 0 : _a.call(callback, { code, errors });
          }
        };
      }
      return this._invokeMethod("addChatRoomEntries", resultCallback, {
        targetId,
        entries,
        deleteWhenLeft,
        overwrite
      });
    }
    /**
     * Âä†ËΩΩËÅäÂ§©ÂÆ§Âçï‰∏™Â±ûÊÄß„ÄÇ
     * @param targetId ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param key      ËÅäÂ§©ÂÆ§Â±ûÊÄßÈîÆÂÄº
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomEntryLoaded]
     * @deprecated Áî® {@link #getChatRoomEntry(String, String, IRCIMIWGetChatRoomEntryCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadChatRoomEntry(targetId, key) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("key", key, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadChatRoomEntry", resultCallback, { targetId, key });
    }
    /**
     * Ëé∑ÂèñËÅäÂ§©ÂÆ§Âçï‰∏™Â±ûÊÄß„ÄÇ
     * @param targetId ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param key      ËÅäÂ§©ÂÆ§Â±ûÊÄßÈîÆÂÄº
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomEntryLoaded]
     */
    getChatRoomEntry(targetId, key, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("key", key, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getChatRoomEntry", resultCallback, { targetId, key });
    }
    /**
     * Âä†ËΩΩËÅäÂ§©ÂÆ§ÊâÄÊúâÂ±ûÊÄß„ÄÇ
     * @param targetId ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomAllEntriesLoaded]
     * @deprecated Áî® {@link #getChatRoomAllEntries(String, IRCIMIWGetChatRoomAllEntriesCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadChatRoomAllEntries(targetId) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadChatRoomAllEntries", resultCallback, { targetId });
    }
    /**
     * Ëé∑ÂèñËÅäÂ§©ÂÆ§ÊâÄÊúâÂ±ûÊÄß„ÄÇ
     * @param targetId ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomAllEntriesLoaded]
     */
    getChatRoomAllEntries(targetId, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getChatRoomAllEntries", resultCallback, { targetId });
    }
    /**
     * Âà†Èô§ËÅäÂ§©ÂÆ§Ëá™ÂÆö‰πâÂ±ûÊÄß„ÄÇ
     * @param targetId ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param key      ËÅäÂ§©ÂÆ§Â±ûÊÄßÈîÆÂÄº
     * @param force    ÊòØÂê¶Âº∫Âà∂Âà†Èô§
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomEntryRemoved]
     */
    removeChatRoomEntry(targetId, key, force, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("key", key, AssertRules.STRING, true) || !validate("force", force, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onChatRoomEntryRemoved") {
            let { code } = res;
            (_a = callback.onChatRoomEntryRemoved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("removeChatRoomEntry", resultCallback, { targetId, key, force });
    }
    /**
     * ÊâπÈáèÂà†Èô§ËÅäÂ§©ÂÆ§Ëá™ÂÆö‰πâÂ±ûÊÄß
     * @param targetId ËÅäÂ§©ÂÆ§‰ºöËØù ID
     * @param keys     ËÅäÂ§©ÂÆ§Â±ûÊÄß
     * @param force    ÊòØÂê¶Âº∫Âà∂Ë¶ÜÁõñ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onChatRoomEntriesRemoved]
     */
    removeChatRoomEntries(targetId, keys, force, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("keys", keys, AssertRules.ARRAY, true) || !validate("force", force, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onChatRoomEntriesRemoved") {
            let { code } = res;
            (_a = callback.onChatRoomEntriesRemoved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("removeChatRoomEntries", resultCallback, { targetId, keys, force });
    }
    /**
     * Â∞ÜÊüê‰∏™Áî®Êà∑Âä†ÂÖ•ÈªëÂêçÂçï„ÄÇ
     * ÂΩì‰Ω†ÊääÂØπÊñπÂä†ÂÖ•ÈªëÂêçÂçïÂêéÔºåÂØπÊñπÂÜçÂèëÊ∂àÊÅØÊó∂ÔºåÂ∞±‰ºöÊèêÁ§∫‚ÄúÂ∑≤Ë¢´Âä†ÂÖ•ÈªëÂêçÂçïÔºåÊ∂àÊÅØÂèëÈÄÅÂ§±Ë¥•‚Äù„ÄÇ ‰ΩÜ‰Ω†‰æùÁÑ∂ÂèØ‰ª•ÂèëÊ∂àÊÅØ‰∏™ÂØπÊñπ„ÄÇ
     * @param userId   Áî®Êà∑ Id
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlacklistAdded]
     */
    addToBlacklist(userId, callback) {
      if (!validate("userId", userId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onBlacklistAdded") {
            let { code, userId: userId2 } = res;
            (_a = callback.onBlacklistAdded) == null ? void 0 : _a.call(callback, { code, userId: userId2 });
          }
        };
      }
      return this._invokeMethod("addToBlacklist", resultCallback, { userId });
    }
    /**
     * Â∞ÜÊüê‰∏™Áî®Êà∑‰ªéÈªëÂêçÂçï‰∏≠ÁßªÂá∫„ÄÇ
     * @param userId   Áî®Êà∑ Id
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlacklistRemoved]
     */
    removeFromBlacklist(userId, callback) {
      if (!validate("userId", userId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onBlacklistRemoved") {
            let { code, userId: userId2 } = res;
            (_a = callback.onBlacklistRemoved) == null ? void 0 : _a.call(callback, { code, userId: userId2 });
          }
        };
      }
      return this._invokeMethod("removeFromBlacklist", resultCallback, { userId });
    }
    /**
     * Ëé∑ÂèñÊüêÁî®Êà∑ÊòØÂê¶Âú®ÈªëÂêçÂçï‰∏≠„ÄÇ
     * @param userId Áî®Êà∑ Id
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlacklistStatusLoaded]
     * @deprecated Áî® {@link #getBlacklistStatus(String, IRCIMIWGetBlacklistStatusCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadBlacklistStatus(userId) {
      if (!validate("userId", userId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadBlacklistStatus", resultCallback, { userId });
    }
    /**
     * Ëé∑ÂèñÊüêÁî®Êà∑ÊòØÂê¶Âú®ÈªëÂêçÂçï‰∏≠„ÄÇ
     * @param userId   Áî®Êà∑ Id
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlacklistStatusLoaded]
     */
    getBlacklistStatus(userId, callback) {
      if (!validate("userId", userId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getBlacklistStatus", resultCallback, { userId });
    }
    /**
     * Âä†ËΩΩÂΩìÂâçÁî®Êà∑ËÆæÁΩÆÁöÑÈªëÂêçÂçïÂàóË°®„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlacklistLoaded]
     * @deprecated Áî® {@link #getBlacklist(IRCIMIWGetBlacklistCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadBlacklist() {
      let resultCallback;
      return this._invokeMethod("loadBlacklist", resultCallback, {});
    }
    /**
     * Ëé∑ÂèñÂΩìÂâçÁî®Êà∑ËÆæÁΩÆÁöÑÈªëÂêçÂçïÂàóË°®„ÄÇ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBlacklistLoaded]
     */
    getBlacklist(callback) {
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getBlacklist", resultCallback, {});
    }
    /**
     * Ê†πÊçÆÂÖ≥ÈîÆÂ≠óÊêúÁ¥¢ÊåáÂÆö‰ºöËØù‰∏≠ÁöÑÊ∂àÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param keyword   ÊêúÁ¥¢ÁöÑÂÖ≥ÈîÆÂ≠ó
     * @param startTime Êü•ËØ¢ beginTime ‰πãÂâçÁöÑÊ∂àÊÅØÔºå ‰º† 0 Êó∂‰ªéÊúÄÊñ∞Ê∂àÊÅØÂºÄÂßãÊêúÁ¥¢Ôºå‰ªéËØ•Êó∂Èó¥ÂæÄÂâçÊêúÁ¥¢„ÄÇ
     * @param count     Êü•ËØ¢ÁöÑÊï∞ÈáèÔºå0 < count <= 50„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesSearched]
     */
    searchMessages(type, targetId, channelId, keyword, startTime, count, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("keyword", keyword, AssertRules.STRING, true) || !validate("startTime", startTime, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("searchMessages", resultCallback, {
        type,
        targetId,
        channelId,
        keyword,
        startTime,
        count
      });
    }
    /**
     * Ê†πÊçÆÂÖ≥ÈîÆÂ≠óÊêúÁ¥¢ÊåáÂÆö‰ºöËØù‰∏≠Êüê‰∏™Êó∂Èó¥ÊÆµÁöÑÊ∂àÊÅØ„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param keyword   ÊêúÁ¥¢ÁöÑÂÖ≥ÈîÆÂ≠ó
     * @param startTime ÂºÄÂßãÊó∂Èó¥
     * @param endTime   ÁªìÊùüÊó∂Èó¥
     * @param offset    ÂÅèÁßªÈáè
     * @param count     ËøîÂõûÁöÑÊêúÁ¥¢ÁªìÊûúÊï∞ÈáèÔºå0 < count <= 50„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesSearchedByTimeRange]
     */
    searchMessagesByTimeRange(type, targetId, channelId, keyword, startTime, endTime, offset, count, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("keyword", keyword, AssertRules.STRING, true) || !validate("startTime", startTime, AssertRules.NUMBER, true) || !validate("endTime", endTime, AssertRules.NUMBER, true) || !validate("offset", offset, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("searchMessagesByTimeRange", resultCallback, {
        type,
        targetId,
        channelId,
        keyword,
        startTime,
        endTime,
        offset,
        count
      });
    }
    /**
     * Ê†πÊçÆÁî®Êà∑ id ÊêúÁ¥¢ÊåáÂÆö‰ºöËØù‰∏≠ÁöÑÊ∂àÊÅØ„ÄÇ
     * @param userId    Áî®Êà∑ id
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param startTime Êü•ËØ¢ËÆ∞ÂΩïÁöÑËµ∑ÂßãÊó∂Èó¥Ôºå ‰º† 0 Êó∂‰ªéÊúÄÊñ∞Ê∂àÊÅØÂºÄÂßãÊêúÁ¥¢Ôºå‰ªéËØ•Êó∂Èó¥ÂæÄÂâçÊêúÁ¥¢„ÄÇ
     * @param count     ËøîÂõûÁöÑÊêúÁ¥¢ÁªìÊûúÊï∞Èáè 0 < count <= 50„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessagesSearchedByUserId]
     */
    searchMessagesByUserId(userId, type, targetId, channelId, startTime, count, callback) {
      if (!validate("userId", userId, AssertRules.STRING, true) || !validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("startTime", startTime, AssertRules.NUMBER, true) || !validate("count", count, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("searchMessagesByUserId", resultCallback, {
        userId,
        type,
        targetId,
        channelId,
        startTime,
        count
      });
    }
    /**
     * Ê†πÊçÆÂÖ≥ÈîÆÂ≠óÊêúÁ¥¢‰ºöËØù„ÄÇ
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param messageTypes      ÊêúÁ¥¢ÁöÑÊ∂àÊÅØÁ±ªÂûã
     * @param keyword           ÊêúÁ¥¢ÁöÑÂÖ≥ÈîÆÂ≠ó„ÄÇ
     * @param callback          ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationsSearched]
     */
    searchConversations(conversationTypes, channelId, messageTypes, keyword, callback) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("messageTypes", messageTypes, AssertRules.NUMBER_ARRAY, true) || !validate("keyword", keyword, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("searchConversations", resultCallback, {
        conversationTypes,
        channelId,
        messageTypes,
        keyword
      });
    }
    /**
     * Â±èËîΩÊüê‰∏™Êó∂Èó¥ÊÆµÁöÑÊ∂àÊÅØÊèêÈÜí
     * @param startTime   ÂºÄÂßãÊ∂àÊÅØÂÖçÊâìÊâ∞Êó∂Èó¥ÔºåÊ†ºÂºè‰∏∫ HH:MM:SS
     * @param spanMinutes ÈúÄË¶ÅÊ∂àÊÅØÂÖçÊâìÊâ∞ÂàÜÈíüÊï∞Ôºå0 < spanMinutes < 1440Ôºà ÊØîÂ¶ÇÔºåÊÇ®ËÆæÁΩÆÁöÑËµ∑ÂßãÊó∂Èó¥ÊòØ 00Ôºö00Ôºå ÁªìÊùüÊó∂Èó¥‰∏∫ 01:00ÔºåÂàô spanMinutes ‰∏∫ 60 ÂàÜÈíü„ÄÇËÆæÁΩÆ‰∏∫ 1439 ‰ª£Ë°®ÂÖ®Â§©ÂÖçÊâìÊâ∞ Ôºà23  60 + 59 = 1439 ÔºâÔºâ
     * @param level       Ê∂àÊÅØÈÄöÁü•Á∫ßÂà´
     * @param callback    ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onNotificationQuietHoursChanged]
     */
    changeNotificationQuietHours(startTime, spanMinutes, level, callback) {
      if (!validate("startTime", startTime, AssertRules.STRING, true) || !validate("spanMinutes", spanMinutes, AssertRules.NUMBER, true) || !validate("level", level, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onNotificationQuietHoursChanged") {
            let { code } = res;
            (_a = callback.onNotificationQuietHoursChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeNotificationQuietHours", resultCallback, { startTime, spanMinutes, level });
    }
    /**
     * Âà†Èô§Â∑≤ËÆæÁΩÆÁöÑÂÖ®Â±ÄÊó∂Èó¥ÊÆµÊ∂àÊÅØÊèêÈÜíÂ±èËîΩ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onNotificationQuietHoursRemoved]
     */
    removeNotificationQuietHours(callback) {
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onNotificationQuietHoursRemoved") {
            let { code } = res;
            (_a = callback.onNotificationQuietHoursRemoved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("removeNotificationQuietHours", resultCallback, {});
    }
    /**
     * Âä†ËΩΩÂ∑≤ËÆæÁΩÆÁöÑÊó∂Èó¥ÊÆµÊ∂àÊÅØÊèêÈÜíÂ±èËîΩ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onNotificationQuietHoursLoaded]
     * @deprecated Áî® {@link #getNotificationQuietHours(IRCIMIWGetNotificationQuietHoursCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadNotificationQuietHours() {
      let resultCallback;
      return this._invokeMethod("loadNotificationQuietHours", resultCallback, {});
    }
    /**
     * Ëé∑ÂèñÂ∑≤ËÆæÁΩÆÁöÑÊó∂Èó¥ÊÆµÊ∂àÊÅØÊèêÈÜíÂ±èËîΩ
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onNotificationQuietHoursLoaded]
     */
    getNotificationQuietHours(callback) {
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { startTime, spanMinutes, level } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { startTime, spanMinutes, level });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getNotificationQuietHours", resultCallback, {});
    }
    /**
     * ËÆæÁΩÆ‰ºöËØùÁöÑÊ∂àÊÅØÊèêÈÜíÁä∂ÊÄÅ
     * Ê≥®ÔºöË∂ÖÁ∫ßÁæ§Ë∞ÉÁî®ËØ•Êé•Âè£ÔºåchannelId ‰∏∫Á©∫Êó∂ÔºåÁõ∏ÂΩì‰∫éËÆæÁΩÆ‰∫Ü channelId ‰∏∫Á©∫ÁöÑÈ¢ëÈÅìÁöÑÂÖçÊâìÊâ∞Ôºå‰∏ç‰ºöÂ±èËîΩÊï¥‰∏™Ë∂ÖÁ∫ßÁæ§‰ºöËØù‰∏ãÊâÄÊúâÈ¢ëÈÅìÁöÑÂÖçÊâìÊâ∞
     * @param type      ‰ºöËØùÁ±ªÂûã„ÄÇËØ∑Ê≥®ÊÑè‰ª•‰∏ãÈôêÂà∂Ôºö<ul><li>*Ë∂ÖÁ∫ßÁæ§‰ºöËØùÁ±ªÂûã*ÔºöÂ¶ÇÂú® 2022.09.01 ‰πãÂâçÂºÄÈÄöË∂ÖÁ∫ßÁæ§‰∏öÂä°ÔºåÈªòËÆ§‰∏çÊîØÊåÅ‰∏∫Âçï‰∏™Ë∂ÖÁ∫ßÁæ§‰ºöËØù*ÊâÄÊúâÊ∂àÊÅØ*ËÆæÁΩÆÂÖçÊâìÊâ∞Á∫ßÂà´Ôºà‚ÄúÊâÄÊúâÊ∂àÊÅØ‚ÄùÊåáÊâÄÊúâÈ¢ëÈÅì‰∏≠ÁöÑÊ∂àÊÅØÂíå‰∏çÂ±û‰∫é‰ªª‰ΩïÈ¢ëÈÅìÁöÑÊ∂àÊÅØÔºâ„ÄÇËØ•Êé•Âè£‰ªÖËÆæÁΩÆÊåáÂÆöË∂ÖÁ∫ßÁæ§‰ºöËØùÔºà`targetId`Ôºâ‰∏≠*‰∏çÂ±û‰∫é‰ªª‰ΩïÈ¢ëÈÅìÁöÑÊ∂àÊÅØ*ÁöÑÂÖçÊâìÊâ∞Áä∂ÊÄÅÁ∫ßÂà´„ÄÇÂ¶ÇÈúÄ‰øÆÊîπËØ∑Êèê‰∫§Â∑•Âçï„ÄÇ</li><li>*ËÅäÂ§©ÂÆ§‰ºöËØùÁ±ªÂûã*Ôºö‰∏çÊîØÊåÅÔºåÂõ†‰∏∫ËÅäÂ§©ÂÆ§Ê∂àÊÅØÈªòËÆ§‰∏çÊîØÊåÅÊ∂àÊÅØÊé®ÈÄÅÊèêÈÜí„ÄÇ</li></ul>
     * @param targetId  ‰ºöËØù ID
     * @param channelId Ë∂ÖÁ∫ßÁæ§ÁöÑ‰ºöËØùÈ¢ëÈÅì ID„ÄÇÂÖ∂‰ªñÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ<ul><li>Â¶ÇÊûú‰º†ÂÖ•È¢ëÈÅì IDÔºåÂàôÈíàÂØπËØ•ÊåáÂÆöÈ¢ëÈÅìËÆæÁΩÆÊ∂àÊÅØÂÖçÊâìÊâ∞Á∫ßÂà´„ÄÇÂ¶ÇÊûú‰∏çÊåáÂÆöÈ¢ëÈÅì IDÔºåÂàôÂØπÊâÄÊúâË∂ÖÁ∫ßÁæ§Ê∂àÊÅØÁîüÊïà„ÄÇ</li><li>*Ê≥®ÊÑè*Ôºö2022.09.01 ‰πãÂâçÂºÄÈÄöË∂ÖÁ∫ßÁæ§‰∏öÂä°ÁöÑÂÆ¢Êà∑ÔºåÂ¶ÇÊûú‰∏çÊåáÂÆöÈ¢ëÈÅì IDÔºåÂàôÈªòËÆ§‰º† "" Á©∫Â≠óÁ¨¶‰∏≤ÔºåÂç≥‰ªÖÈíàÂØπÊåáÂÆöË∂ÖÁ∫ßÁæ§‰ºöËØùÔºà`targetId`Ôºâ‰∏≠*‰∏çÂ±û‰∫é‰ªª‰ΩïÈ¢ëÈÅìÁöÑÊ∂àÊÅØ*ËÆæÁΩÆÂÖçÊâìÊâ∞Áä∂ÊÄÅÁ∫ßÂà´„ÄÇÂ¶ÇÈúÄ‰øÆÊîπËØ∑Êèê‰∫§Â∑•Âçï„ÄÇ</p></li></ul>
     * @param level     Ê∂àÊÅØÈÄöÁü•Á∫ßÂà´
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationNotificationLevelChanged]
     */
    changeConversationNotificationLevel(type, targetId, channelId, level, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("level", level, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onConversationNotificationLevelChanged") {
            let { code } = res;
            (_a = callback.onConversationNotificationLevelChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeConversationNotificationLevel", resultCallback, {
        type,
        targetId,
        channelId,
        level
      });
    }
    /**
     * Âä†ËΩΩ‰ºöËØùÁöÑÊ∂àÊÅØÊèêÈÜíÁä∂ÊÄÅ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationNotificationLevelLoaded]
     * @deprecated Áî® {@link #getConversationNotificationLevel(RCIMIWConversationType, String, String, IRCIMIWGetConversationNotificationLevelCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadConversationNotificationLevel(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadConversationNotificationLevel", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑Âèñ‰ºöËØùÁöÑÊ∂àÊÅØÊèêÈÜíÁä∂ÊÄÅ
     * @param type      ‰ºöËØùÁ±ªÂûã„ÄÇËØ∑Ê≥®ÊÑè‰ª•‰∏ãÈôêÂà∂Ôºö<ul><li>*Ë∂ÖÁ∫ßÁæ§‰ºöËØùÁ±ªÂûã*ÔºöÂ¶ÇÂú® 2022.09.01 ‰πãÂâçÂºÄÈÄöË∂ÖÁ∫ßÁæ§‰∏öÂä°ÔºåÈªòËÆ§‰∏çÊîØÊåÅ‰∏∫Âçï‰∏™Ë∂ÖÁ∫ßÁæ§‰ºöËØù*ÊâÄÊúâÊ∂àÊÅØ*ËÆæÁΩÆÂÖçÊâìÊâ∞Á∫ßÂà´Ôºà‚ÄúÊâÄÊúâÊ∂àÊÅØ‚ÄùÊåáÊâÄÊúâÈ¢ëÈÅì‰∏≠ÁöÑÊ∂àÊÅØÂíå‰∏çÂ±û‰∫é‰ªª‰ΩïÈ¢ëÈÅìÁöÑÊ∂àÊÅØÔºâ„ÄÇËØ•Êé•Âè£‰ªÖËÆæÁΩÆÊåáÂÆöË∂ÖÁ∫ßÁæ§‰ºöËØùÔºà`targetId`Ôºâ‰∏≠*‰∏çÂ±û‰∫é‰ªª‰ΩïÈ¢ëÈÅìÁöÑÊ∂àÊÅØ*ÁöÑÂÖçÊâìÊâ∞Áä∂ÊÄÅÁ∫ßÂà´„ÄÇÂ¶ÇÈúÄ‰øÆÊîπËØ∑Êèê‰∫§Â∑•Âçï„ÄÇ</li><li>*ËÅäÂ§©ÂÆ§‰ºöËØùÁ±ªÂûã*Ôºö‰∏çÊîØÊåÅÔºåÂõ†‰∏∫ËÅäÂ§©ÂÆ§Ê∂àÊÅØÈªòËÆ§‰∏çÊîØÊåÅÊ∂àÊÅØÊé®ÈÄÅÊèêÈÜí„ÄÇ</li></ul>
     * @param targetId  ‰ºöËØù ID
     * @param channelId Ë∂ÖÁ∫ßÁæ§ÁöÑ‰ºöËØùÈ¢ëÈÅì ID„ÄÇÂÖ∂‰ªñÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ<ul><li>Â¶ÇÊûú‰º†ÂÖ•È¢ëÈÅì IDÔºåÂàôÈíàÂØπËØ•ÊåáÂÆöÈ¢ëÈÅìËÆæÁΩÆÊ∂àÊÅØÂÖçÊâìÊâ∞Á∫ßÂà´„ÄÇÂ¶ÇÊûú‰∏çÊåáÂÆöÈ¢ëÈÅì IDÔºåÂàôÂØπÊâÄÊúâË∂ÖÁ∫ßÁæ§Ê∂àÊÅØÁîüÊïà„ÄÇ</li><li>*Ê≥®ÊÑè*Ôºö2022.09.01 ‰πãÂâçÂºÄÈÄöË∂ÖÁ∫ßÁæ§‰∏öÂä°ÁöÑÂÆ¢Êà∑ÔºåÂ¶ÇÊûú‰∏çÊåáÂÆöÈ¢ëÈÅì IDÔºåÂàôÈªòËÆ§‰º† "" Á©∫Â≠óÁ¨¶‰∏≤ÔºåÂç≥‰ªÖÈíàÂØπÊåáÂÆöË∂ÖÁ∫ßÁæ§‰ºöËØùÔºà`targetId`Ôºâ‰∏≠*‰∏çÂ±û‰∫é‰ªª‰ΩïÈ¢ëÈÅìÁöÑÊ∂àÊÅØ*ËÆæÁΩÆÂÖçÊâìÊâ∞Áä∂ÊÄÅÁ∫ßÂà´„ÄÇÂ¶ÇÈúÄ‰øÆÊîπËØ∑Êèê‰∫§Â∑•Âçï„ÄÇ</p></li></ul>
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationNotificationLevelLoaded]
     */
    getConversationNotificationLevel(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getConversationNotificationLevel", resultCallback, { type, targetId, channelId });
    }
    /**
     * ËÆæÁΩÆ‰ºöËØùÁ±ªÂûãÁöÑÊ∂àÊÅØÊèêÈÜíÁä∂ÊÄÅ
     * Ê≥®ÔºöÂ¶ÇË¶ÅÁßªÈô§Ê∂àÊÅØÊèêÈÜíÁä∂ÊÄÅÔºåËÆæÁΩÆlevel‰∏∫RCIMIWPushNotificationLevelDefault
     * @param type     ‰ºöËØùÁ±ªÂûã
     * @param level    Ê∂àÊÅØÈÄöÁü•Á∫ßÂà´
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationTypeNotificationLevelChanged]
     */
    changeConversationTypeNotificationLevel(type, level, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("level", level, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onConversationTypeNotificationLevelChanged") {
            let { code } = res;
            (_a = callback.onConversationTypeNotificationLevelChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeConversationTypeNotificationLevel", resultCallback, { type, level });
    }
    /**
     * Ëé∑Âèñ‰ºöËØùÁ±ªÂûãÁöÑÊ∂àÊÅØÊèêÈÜíÁä∂ÊÄÅ
     * @param type ‰ºöËØùÁ±ªÂûã
     * @return [onConversationTypeNotificationLevelLoaded]
     * @deprecated Áî® {@link #getConversationTypeNotificationLevel(RCIMIWConversationType, IRCIMIWGetConversationTypeNotificationLevelCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadConversationTypeNotificationLevel(type) {
      if (!validate("type", type, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadConversationTypeNotificationLevel", resultCallback, { type });
    }
    /**
     * Ëé∑Âèñ‰ºöËØùÁ±ªÂûãÁöÑÊ∂àÊÅØÊèêÈÜíÁä∂ÊÄÅ
     * @param type     ‰ºöËØùÁ±ªÂûã
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return [onConversationTypeNotificationLevelLoaded]
     */
    getConversationTypeNotificationLevel(type, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getConversationTypeNotificationLevel", resultCallback, { type });
    }
    /**
     * ËÆæÁΩÆË∂ÖÁ∫ßÁæ§ÁöÑÈªòËÆ§Ê∂àÊÅØÁä∂ÊÄÅ
     * ‰∏ÄËà¨Áî±ÁÆ°ÁêÜÂëòËÆæÁΩÆÁöÑÊé•Âè£ÔºåÈíàÂØπË∂ÖÁ∫ßÁæ§ÁöÑÊâÄÊúâÁæ§ÊàêÂëòÁîüÊïàÔºåÈíàÂØπË∂ÖÁ∫ßÁæ§‰∏ãÊâÄÊúâÈ¢ëÈÅìÁîüÊïàÔºå‰ºòÂÖàÁ∫ßËæÉ‰Ωé„ÄÇÂ¶ÇÊûúÁæ§ÊàêÂëòËá™Â∑±Ë∂ÖÁ∫ßÁæ§ÁöÑÂÖçÊâìÊâ∞Á∫ßÂà´ÔºåÈÇ£‰πà‰ª•Áæ§ÊàêÂëòËá™Â∑±ËÆæÁΩÆÁöÑ‰∏∫ÂáÜ„ÄÇ
     * @param targetId ‰ºöËØù ID
     * @param level    Ê∂àÊÅØÈÄöÁü•Á∫ßÂà´
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupDefaultNotificationLevelChanged]
     */
    changeUltraGroupDefaultNotificationLevel(targetId, level, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("level", level, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupDefaultNotificationLevelChanged") {
            let { code } = res;
            (_a = callback.onUltraGroupDefaultNotificationLevelChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeUltraGroupDefaultNotificationLevel", resultCallback, { targetId, level });
    }
    /**
     * Ëé∑ÂèñË∂ÖÁ∫ßÁæ§ÁöÑÈªòËÆ§Ê∂àÊÅØÁä∂ÊÄÅ
     * @param targetId ‰ºöËØù ID
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupDefaultNotificationLevelLoaded]
     * @deprecated Áî® {@link #getUltraGroupDefaultNotificationLevel(String, IRCIMIWGetUltraGroupDefaultNotificationLevelCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUltraGroupDefaultNotificationLevel(targetId) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUltraGroupDefaultNotificationLevel", resultCallback, { targetId });
    }
    /**
     * Ëé∑ÂèñË∂ÖÁ∫ßÁæ§ÁöÑÈªòËÆ§Ê∂àÊÅØÁä∂ÊÄÅ
     * @param targetId ‰ºöËØù ID
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupDefaultNotificationLevelLoaded]
     */
    getUltraGroupDefaultNotificationLevel(targetId, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUltraGroupDefaultNotificationLevel", resultCallback, { targetId });
    }
    /**
     * ËÆæÁΩÆË∂ÖÁ∫ßÁæ§È¢ëÈÅìÁöÑÈªòËÆ§Ê∂àÊÅØÁä∂ÊÄÅ
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®„ÄÇ
     * @param level     Ê∂àÊÅØÈÄöÁü•Á∫ßÂà´
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupChannelDefaultNotificationLevelChanged]
     */
    changeUltraGroupChannelDefaultNotificationLevel(targetId, channelId, level, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("level", level, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupChannelDefaultNotificationLevelChanged") {
            let { code } = res;
            (_a = callback.onUltraGroupChannelDefaultNotificationLevelChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changeUltraGroupChannelDefaultNotificationLevel", resultCallback, {
        targetId,
        channelId,
        level
      });
    }
    /**
     * Ëé∑ÂèñË∂ÖÁ∫ßÁæ§È¢ëÈÅìÁöÑÈªòËÆ§Ê∂àÊÅØÁä∂ÊÄÅ
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupChannelDefaultNotificationLevelLoaded]
     * @deprecated Áî® {@link #getUltraGroupChannelDefaultNotificationLevel(String, String, IRCIMIWGetUltraGroupChannelDefaultNotificationLevelCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadUltraGroupChannelDefaultNotificationLevel(targetId, channelId) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadUltraGroupChannelDefaultNotificationLevel", resultCallback, {
        targetId,
        channelId
      });
    }
    /**
     * Ëé∑ÂèñË∂ÖÁ∫ßÁæ§È¢ëÈÅìÁöÑÈªòËÆ§Ê∂àÊÅØÁä∂ÊÄÅ
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupChannelDefaultNotificationLevelLoaded]
     */
    getUltraGroupChannelDefaultNotificationLevel(targetId, channelId, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getUltraGroupChannelDefaultNotificationLevel", resultCallback, {
        targetId,
        channelId
      });
    }
    /**
     * ËÆæÁΩÆÊòØÂê¶ÊòæÁ§∫ËøúÁ®ãÊé®ÈÄÅÂÜÖÂÆπËØ¶ÊÉÖÔºåÊ≠§ÂäüËÉΩÈúÄË¶Å‰ªéÊúçÂä°Á´ØÂºÄÂêØÁî®Êà∑ËÆæÁΩÆÂäüËÉΩ„ÄÇ
     * @param showContent ÊòØÂê¶ÊòæÁ§∫ËøúÁ®ãÊé®ÈÄÅÂÜÖÂÆπ
     * @param callback    ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onPushContentShowStatusChanged]
     */
    changePushContentShowStatus(showContent, callback) {
      if (!validate("showContent", showContent, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onPushContentShowStatusChanged") {
            let { code } = res;
            (_a = callback.onPushContentShowStatusChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changePushContentShowStatus", resultCallback, { showContent });
    }
    /**
     * ËÆæÁΩÆÊé®ÈÄÅËØ≠Ë®Ä
     * @param language Êé®ÈÄÅËØ≠Ë®ÄÔºå ÁõÆÂâç‰ªÖÊîØÊåÅ en_us„ÄÅzh_cn„ÄÅar_sa
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onPushLanguageChanged]
     */
    changePushLanguage(language, callback) {
      if (!validate("language", language, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onPushLanguageChanged") {
            let { code } = res;
            (_a = callback.onPushLanguageChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changePushLanguage", resultCallback, { language });
    }
    /**
     * ËÆæÁΩÆÊòØÂê¶Êé•Êî∂ËøúÁ®ãÊé®ÈÄÅ„ÄÇ
     * ÂâçÊèêÔºöÁßªÂä®Á´ØÊú™Âú®Á∫øÔºåWeb „ÄÅMAC/PC ÁªàÁ´ØÂú®Á∫øÔºåÁßªÂä®Á´ØÊòØÂê¶Êé•Êî∂ËøúÁ®ãÊé®ÈÄÅ„ÄÇ
     * Ê≠§ÂäüËÉΩÈúÄË¶Å‰ªéÊúçÂä°Á´ØÂºÄÂêØÁî®Êà∑ËÆæÁΩÆÂäüËÉΩ„ÄÇ
     * @param receive  ÊòØÂê¶Êé•Êî∂
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onPushReceiveStatusChanged]
     */
    changePushReceiveStatus(receive, callback) {
      if (!validate("receive", receive, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onPushReceiveStatusChanged") {
            let { code } = res;
            (_a = callback.onPushReceiveStatusChanged) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("changePushReceiveStatus", resultCallback, { receive });
    }
    /**
     * ÁªôÊåáÂÆöÁöÑÁæ§ÊàêÂëòÂèëÈÄÅÊ∂àÊÅØ
     * @param message  Ë¶ÅÂèëÈÄÅÁöÑÊ∂àÊÅØ
     * @param userIds  Áæ§ÊàêÂëòÈõÜÂêà
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onGroupMessageToDesignatedUsersAttached], [onGroupMessageToDesignatedUsersSent]
     */
    sendGroupMessageToDesignatedUsers(message, userIds, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true) || !validate("userIds", userIds, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onMessageSaved") {
            let { message: message2 } = res;
            (_a = callback.onMessageSaved) == null ? void 0 : _a.call(callback, { message: message2 });
          }
          if (res.callbackName === "onMessageSent") {
            let { code, message: message2 } = res;
            (_b = callback.onMessageSent) == null ? void 0 : _b.call(callback, { code, message: message2 });
          }
        };
      }
      return this._invokeMethod("sendGroupMessageToDesignatedUsers", resultCallback, { message, userIds });
    }
    /**
     * Âä†ËΩΩÊåáÂÆö‰ºöËØùÁöÑÊ∂àÊÅØÊÄªÊï∞„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageCountLoaded]
     * @deprecated Áî® {@link #getMessageCount(RCIMIWConversationType, String, String, IRCIMIWGetMessageCountCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadMessageCount(type, targetId, channelId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadMessageCount", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ëé∑ÂèñÊåáÂÆö‰ºöËØùÁöÑÊ∂àÊÅØÊÄªÊï∞„ÄÇ
     * @param type      ‰ºöËØùÁ±ªÂûã
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onMessageCountLoaded]
     */
    getMessageCount(type, targetId, channelId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getMessageCount", resultCallback, { type, targetId, channelId });
    }
    /**
     * Ê†πÊçÆ‰ºöËØùÁ±ªÂûã,Âä†ËΩΩÁΩÆÈ°∂‰ºöËØùÂàóË°®
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onTopConversationsLoaded]
     * @deprecated Áî® {@link #getTopConversations(List, String, IRCIMIWGetTopConversationsCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadTopConversations(conversationTypes, channelId) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadTopConversations", resultCallback, { conversationTypes, channelId });
    }
    /**
     * Ê†πÊçÆ‰ºöËØùÁ±ªÂûã,Ëé∑ÂèñÁΩÆÈ°∂‰ºöËØùÂàóË°®
     * @param conversationTypes ‰ºöËØùÁ±ªÂûãÈõÜÂêà
     * @param channelId         È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®ÔºåÂÖ∂‰ªñ‰ºöËØùÁ±ªÂûã‰º† null Âç≥ÂèØ„ÄÇ
     * @param callback          ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onTopConversationsLoaded]
     */
    getTopConversations(conversationTypes, channelId, callback) {
      if (!validate("conversationTypes", conversationTypes, AssertRules.NUMBER_ARRAY, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getTopConversations", resultCallback, { conversationTypes, channelId });
    }
    /**
     * ‰∏äÊä•Ë∂ÖÁ∫ßÁæ§ÁöÑÂ∑≤ËØªÊó∂Èó¥
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®„ÄÇ
     * @param timestamp Â∑≤ËØªÊó∂Èó¥
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupReadStatusSynced]
     */
    syncUltraGroupReadStatus(targetId, channelId, timestamp, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("timestamp", timestamp, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupReadStatusSynced") {
            let { code } = res;
            (_a = callback.onUltraGroupReadStatusSynced) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("syncUltraGroupReadStatus", resultCallback, { targetId, channelId, timestamp });
    }
    /**
     * Ëé∑ÂèñÁâπÂÆö‰ºöËØù‰∏ãÊâÄÊúâÈ¢ëÈÅìÁöÑ‰ºöËØùÂàóË°®ÔºåÂè™ÊîØÊåÅË∂ÖÁ∫ßÁæ§
     * @param type     ‰ºöËØùÁ±ªÂûã
     * @param targetId ‰ºöËØù ID
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationsLoadedForAllChannel]
     * @deprecated Áî® {@link #getConversationsForAllChannel(RCIMIWConversationType, String, IRCIMIWGetConversationsForAllChannelCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadConversationsForAllChannel(type, targetId) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadConversationsForAllChannel", resultCallback, { type, targetId });
    }
    /**
     * Ëé∑ÂèñÁâπÂÆö‰ºöËØù‰∏ãÊâÄÊúâÈ¢ëÈÅìÁöÑ‰ºöËØùÂàóË°®ÔºåÂè™ÊîØÊåÅË∂ÖÁ∫ßÁæ§
     * @param type     ‰ºöËØùÁ±ªÂûã
     * @param targetId ‰ºöËØù ID
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onConversationsLoadedForAllChannel]
     */
    getConversationsForAllChannel(type, targetId, callback) {
      if (!validate("type", type, AssertRules.NUMBER, true) || !validate("targetId", targetId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { t } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { t });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getConversationsForAllChannel", resultCallback, { type, targetId });
    }
    /**
     * ‰øÆÊîπË∂ÖÁ∫ßÁæ§Ê∂àÊÅØ
     * @param messageUId Ê∂àÊÅØÁöÑ messageUidÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑ÂèñÔºå‰∏îÂè™ÊúâÂèëÈÄÅÊàêÂäüÁöÑÊ∂àÊÅØÊâç‰ºöÊúâÂÄº
     * @param message    Ë¶Å‰øÆÊîπÁöÑ message
     * @param callback   ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupMessageModified]
     */
    modifyUltraGroupMessage(messageUId, message, callback) {
      if (!validate("messageUId", messageUId, AssertRules.STRING, true) || !validate("message", message, AssertRules.OBJECT, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupMessageModified") {
            let { code } = res;
            (_a = callback.onUltraGroupMessageModified) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("modifyUltraGroupMessage", resultCallback, { messageUId, message });
    }
    /**
     * Êí§ÂõûË∂ÖÁ∫ßÁæ§Ê∂àÊÅØ
     * @param message      ÈúÄË¶ÅÊí§ÂõûÁöÑÊ∂àÊÅØ
     * @param deleteRemote ÊòØÂê¶Âà†Èô§ËøúÁ´ØÊ∂àÊÅØ
     * @param callback     ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupMessageRecalled]
     */
    recallUltraGroupMessage(message, deleteRemote, callback) {
      if (!validate("message", message, AssertRules.OBJECT, true) || !validate("deleteRemote", deleteRemote, AssertRules.BOOLEAN, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupMessageRecalled") {
            let { code } = res;
            (_a = callback.onUltraGroupMessageRecalled) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("recallUltraGroupMessage", resultCallback, { message, deleteRemote });
    }
    /**
     * Âà†Èô§Ë∂ÖÁ∫ßÁæ§ÊåáÂÆöÊó∂Èó¥‰πãÂâçÁöÑÊ∂àÊÅØ
     * @param targetId  ‰ºöËØù ID
     * @param channelId È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®„ÄÇ
     * @param timestamp Êó∂Èó¥Êà≥
     * @param policy    Ê∏ÖÈô§Á≠ñÁï•
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupMessagesCleared]
     */
    clearUltraGroupMessages(targetId, channelId, timestamp, policy, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("timestamp", timestamp, AssertRules.NUMBER, true) || !validate("policy", policy, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupMessagesCleared") {
            let { code } = res;
            (_a = callback.onUltraGroupMessagesCleared) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("clearUltraGroupMessages", resultCallback, {
        targetId,
        channelId,
        timestamp,
        policy
      });
    }
    /**
     * ÂèëÈÄÅË∂ÖÁ∫ßÁæ§ËæìÂÖ•Áä∂ÊÄÅ
     * @param targetId     ‰ºöËØù ID
     * @param channelId    È¢ëÈÅì IDÔºå‰ªÖÊîØÊåÅË∂ÖÁ∫ßÁæ§‰ΩøÁî®„ÄÇ
     * @param typingStatus ËæìÂÖ•Áä∂ÊÄÅ
     * @param callback     ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupTypingStatusSent]
     */
    sendUltraGroupTypingStatus(targetId, channelId, typingStatus, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("channelId", channelId, AssertRules.ONLY_STRING, false) || !validate("typingStatus", typingStatus, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupTypingStatusSent") {
            let { code } = res;
            (_a = callback.onUltraGroupTypingStatusSent) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("sendUltraGroupTypingStatus", resultCallback, { targetId, channelId, typingStatus });
    }
    /**
     * Âà†Èô§Ë∂ÖÁ∫ßÁæ§ÊâÄÊúâÈ¢ëÈÅìÊåáÂÆöÊó∂Èó¥‰πãÂâçÁöÑÊ∂àÊÅØ
     * @param targetId  ‰ºöËØù ID
     * @param timestamp Êó∂Èó¥Êà≥
     * @param callback  ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupMessagesClearedForAllChannel]
     */
    clearUltraGroupMessagesForAllChannel(targetId, timestamp, callback) {
      if (!validate("targetId", targetId, AssertRules.STRING, true) || !validate("timestamp", timestamp, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupMessagesClearedForAllChannel") {
            let { code } = res;
            (_a = callback.onUltraGroupMessagesClearedForAllChannel) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("clearUltraGroupMessagesForAllChannel", resultCallback, { targetId, timestamp });
    }
    /**
     * ‰ªéÊúçÂä°Ëé∑ÂèñÊâπÈáèÊ∂àÊÅØ
     * @param messages Ëé∑ÂèñÁöÑÊ∂àÊÅØÈõÜÂêà
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBatchRemoteUltraGroupMessagesLoaded]
     * @deprecated Áî® {@link #getBatchRemoteUltraGroupMessages(List, IRCIMIWGetBatchRemoteUltraGroupMessagesCallback)} ‰ª£ÊõøÔºå È¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§Êé•Âè£„ÄÇ
     */
    loadBatchRemoteUltraGroupMessages(messages) {
      if (!validate("messages", messages, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("loadBatchRemoteUltraGroupMessages", resultCallback, { messages });
    }
    /**
     * ‰ªéÊúçÂä°Ëé∑ÂèñÊâπÈáèÊ∂àÊÅØ
     * @param messages Ëé∑ÂèñÁöÑÊ∂àÊÅØÈõÜÂêà
     * @param callback ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onBatchRemoteUltraGroupMessagesLoaded]
     */
    getBatchRemoteUltraGroupMessages(messages, callback) {
      if (!validate("messages", messages, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a, _b;
          if (res.callbackName === "onSuccess") {
            let { matchedMessages, notMatchedMessages } = res;
            (_a = callback.onSuccess) == null ? void 0 : _a.call(callback, { matchedMessages, notMatchedMessages });
          }
          if (res.callbackName === "onError") {
            let { code } = res;
            (_b = callback.onError) == null ? void 0 : _b.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("getBatchRemoteUltraGroupMessages", resultCallback, { messages });
    }
    /**
     * Êõ¥Êñ∞Ë∂ÖÁ∫ßÁæ§Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØ
     * @param messageUId Ê∂àÊÅØÁöÑ messageUidÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑ÂèñÔºå‰∏îÂè™ÊúâÂèëÈÄÅÊàêÂäüÁöÑÊ∂àÊÅØÊâç‰ºöÊúâÂÄº
     * @param expansion  Êõ¥Êñ∞ÁöÑÊ∂àÊÅØÊâ©Â±ï‰ø°ÊÅØÈîÆÂÄºÂØπÔºåÁ±ªÂûãÊòØ HashMapÔºõKey ÊîØÊåÅÂ§ßÂ∞èÂÜôËã±ÊñáÂ≠óÊØç„ÄÅÊï∞Â≠ó„ÄÅÈÉ®ÂàÜÁâπÊÆäÁ¨¶Âè∑ + = - _ ÁöÑÁªÑÂêàÊñπÂºèÔºå‰∏çÊîØÊåÅÊ±âÂ≠ó„ÄÇValue ÂèØ‰ª•ËæìÂÖ•Á©∫Ê†º„ÄÇ
     * @param callback   ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupMessageExpansionUpdated]
     */
    updateUltraGroupMessageExpansion(messageUId, expansion, callback) {
      if (!validate("messageUId", messageUId, AssertRules.STRING, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupMessageExpansionUpdated") {
            let { code } = res;
            (_a = callback.onUltraGroupMessageExpansionUpdated) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("updateUltraGroupMessageExpansion", resultCallback, { messageUId, expansion });
    }
    /**
     * Âà†Èô§Ë∂ÖÁ∫ßÁæ§Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØ‰∏≠ÁâπÂÆöÁöÑÈîÆÂÄºÂØπ
     * @param messageUId Ê∂àÊÅØÁöÑ messageUidÔºåÂèØÂú®Ê∂àÊÅØÂØπË±°‰∏≠Ëé∑ÂèñÔºå‰∏îÂè™ÊúâÂèëÈÄÅÊàêÂäüÁöÑÊ∂àÊÅØÊâç‰ºöÊúâÂÄº
     * @param keys       Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØ‰∏≠ÂæÖÂà†Èô§ÁöÑ key ÁöÑÂàóË°®ÔºåÁ±ªÂûãÊòØ ArrayList
     * @param callback   ‰∫ã‰ª∂ÂõûË∞É„ÄÇSDK ‰ªé 5.3.1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅ callback ÊñπÂºèÂõûË∞É„ÄÇ‰ªé 5.4.0 ÁâàÊú¨Â∫üÂºÉËØ•Êé•Âè£ÁöÑÂÖ∂‰ªñÂõûË∞ÉÊñπÂºèÔºåÈ¢ÑËÆ°Â∞ÜÂú® 6.x ÁâàÊú¨Âà†Èô§Ê≠§ÂÖ∂‰ªñÂõûË∞ÉÊñπÂºè„ÄÇÂ¶ÇÊûú‰º†ÂÖ•‰∫Ü callback ÂèÇÊï∞Ôºå‰ªÖËß¶Âèë callback ÂõûË∞É„ÄÇ
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     * @listener [onUltraGroupMessageExpansionForKeysRemoved]
     */
    removeUltraGroupMessageExpansionForKeys(messageUId, keys, callback) {
      if (!validate("messageUId", messageUId, AssertRules.STRING, true) || !validate("keys", keys, AssertRules.ARRAY, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      if (callback) {
        resultCallback = (res) => {
          var _a;
          if (res.callbackName === "onUltraGroupMessageExpansionForKeysRemoved") {
            let { code } = res;
            (_a = callback.onUltraGroupMessageExpansionForKeysRemoved) == null ? void 0 : _a.call(callback, { code });
          }
        };
      }
      return this._invokeMethod("removeUltraGroupMessageExpansionForKeys", resultCallback, { messageUId, keys });
    }
    /**
     * ‰øÆÊîπÊó•ÂøóÁ≠âÁ∫ß
     * @param level Êó•ÂøóÁ∫ßÂà´
     * @return ÂΩìÊ¨°Êé•Âè£Êìç‰ΩúÁöÑÁä∂ÊÄÅÁ†Å„ÄÇ0 ‰ª£Ë°®Ë∞ÉÁî®ÊàêÂäü ÂÖ∑‰ΩìÁªìÊûúÈúÄË¶ÅÂÆûÁé∞Êé•Âè£ÂõûË∞ÉÔºåÈùû 0 ‰ª£Ë°®ÂΩìÂâçÊé•Âè£Ë∞ÉÁî®Êìç‰ΩúÂ§±Ë¥•Ôºå‰∏ç‰ºöËß¶ÂèëÊé•Âè£ÂõûË∞ÉÔºåËØ¶ÁªÜÈîôËØØÂèÇËÄÉÈîôËØØÁ†Å
     */
    changeLogLevel(level) {
      if (!validate("level", level, AssertRules.NUMBER, true)) {
        return paramErrorPromise;
      }
      let resultCallback;
      return this._invokeMethod("changeLogLevel", resultCallback, { level });
    }
    /**
     * Ëé∑ÂèñÊú¨Âú∞Êó∂Èó¥‰∏éÊúçÂä°Âô®Êó∂Èó¥ÁöÑÊó∂Èó¥Â∑Æ„ÄÇÊ∂àÊÅØÂèëÈÄÅÊàêÂäüÂêéÔºåSDK ‰∏éÊúçÂä°Âô®ÂêåÊ≠•Êó∂Èó¥ÔºåÊ∂àÊÅØÊâÄÂú®Êï∞ÊçÆÂ∫ì‰∏≠Â≠òÂÇ®ÁöÑÊó∂Èó¥Â∞±ÊòØÊúçÂä°Âô®Êó∂Èó¥„ÄÇ System.currentTimeMillis() - getDeltaTime() ÂèØ‰ª•Ëé∑ÂèñÊúçÂä°Âô®ÂΩìÂâçÊó∂Èó¥„ÄÇ
     * @return Êú¨Âú∞Êó∂Èó¥‰∏éÊúçÂä°Âô®Êó∂Èó¥ÁöÑÂ∑ÆÂÄº
     */
    getDeltaTime() {
      let resultCallback;
      return this._invokeMethod("getDeltaTime", resultCallback, {});
    }
    /**
     * Êî∂Âà∞Ê∂àÊÅØÁöÑÁõëÂê¨
     */
    setOnMessageReceivedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageReceived";
      this._setListener(eventName, callback);
    }
    /**
     * ÁΩëÁªúÁä∂ÊÄÅÂèòÂåñ
     */
    setOnConnectionStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onConnectionStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * ‰ºöËØùÁä∂ÊÄÅÁΩÆÈ°∂Â§öÁ´ØÂêåÊ≠•ÁõëÂê¨
     */
    setOnConversationTopStatusSyncedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationTopStatusSynced";
      this._setListener(eventName, callback);
    }
    /**
     * ‰ºöËØùÁä∂ÊÄÅÂÖçÊâìÊâ∞Â§öÁ´ØÂêåÊ≠•ÁõëÂê¨
     */
    setOnConversationNotificationLevelSyncedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationNotificationLevelSynced";
      this._setListener(eventName, callback);
    }
    /**
     * Êí§ÂõûÊ∂àÊÅØÁõëÂê¨Âô®
     */
    setOnRemoteMessageRecalledListener(callback) {
      const eventName = "IRCIMIWListener:onRemoteMessageRecalled";
      this._setListener(eventName, callback);
    }
    /**
     * ÂçïËÅä‰∏≠Êî∂Âà∞Ê∂àÊÅØÂõûÊâßÁöÑÂõûË∞É„ÄÇ
     */
    setOnPrivateReadReceiptReceivedListener(callback) {
      const eventName = "IRCIMIWListener:onPrivateReadReceiptReceived";
      this._setListener(eventName, callback);
    }
    /**
     * Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØÊõ¥ÊîπÁöÑÂõûË∞É
     */
    setOnRemoteMessageExpansionUpdatedListener(callback) {
      const eventName = "IRCIMIWListener:onRemoteMessageExpansionUpdated";
      this._setListener(eventName, callback);
    }
    /**
     * Ê∂àÊÅØÊâ©Â±ï‰ø°ÊÅØÂà†Èô§ÁöÑÂõûË∞É
     */
    setOnRemoteMessageExpansionForKeyRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onRemoteMessageExpansionForKeyRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * ËÅäÂ§©ÂÆ§Áî®Êà∑ËøõÂÖ•„ÄÅÈÄÄÂá∫ËÅäÂ§©ÂÆ§ÁõëÂê¨
     */
    setOnChatRoomMemberChangedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomMemberChanged";
      this._setListener(eventName, callback);
    }
    /**
     * ‰ºöËØùËæìÂÖ•Áä∂ÊÄÅÂèëÁîüÂèòÂåñ„ÄÇÂØπ‰∫éÂçïËÅäËÄåË®ÄÔºåÂΩìÂØπÊñπÊ≠£Âú®ËæìÂÖ•Êó∂ÔºåÁõëÂê¨‰ºöËß¶Âèë‰∏ÄÊ¨°ÔºõÂΩìÂØπÊñπ‰∏çÂ§Ñ‰∫éËæìÂÖ•Áä∂ÊÄÅÊó∂ÔºåËØ•ÁõëÂê¨Ëøò‰ºöËß¶Âèë‰∏ÄÊ¨°Ôºå‰ΩÜÂõûË∞ÉÈáåËæìÂÖ•Áî®Êà∑ÂàóË°®‰∏∫Á©∫„ÄÇ
     */
    setOnTypingStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onTypingStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * ÂêåÊ≠•Ê∂àÊÅØÊú™ËØªÁä∂ÊÄÅÁõëÂê¨Êé•Âè£„ÄÇÂ§öÁ´ØÁôªÂΩïÔºåÊî∂Âà∞ÂÖ∂ÂÆÉÁ´ØÊ∏ÖÈô§Êüê‰∏Ä‰ºöËØùÊú™ËØªÊï∞ÈÄöÁü•ÁöÑÊó∂ÂÄô
     */
    setOnConversationReadStatusSyncMessageReceivedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationReadStatusSyncMessageReceived";
      this._setListener(eventName, callback);
    }
    /**
     * ËÅäÂ§©ÂÆ§ KV ÂêåÊ≠•ÂÆåÊàêÁöÑÂõûË∞É
     */
    setOnChatRoomEntriesSyncedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomEntriesSynced";
      this._setListener(eventName, callback);
    }
    /**
     * ËÅäÂ§©ÂÆ§ KV ÂèëÁîüÂèòÂåñÁöÑÂõûË∞É
     */
    setOnChatRoomEntriesChangedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomEntriesChanged";
      this._setListener(eventName, callback);
    }
    /**
     * Ë∂ÖÁ∫ßÁæ§Ê∂àÊÅØ kv Ë¢´Êõ¥Êñ∞
     */
    setOnRemoteUltraGroupMessageExpansionUpdatedListener(callback) {
      const eventName = "IRCIMIWListener:onRemoteUltraGroupMessageExpansionUpdated";
      this._setListener(eventName, callback);
    }
    /**
     * Ë∂ÖÁ∫ßÁæ§Ê∂àÊÅØË¢´Êõ¥Êîπ
     */
    setOnRemoteUltraGroupMessageModifiedListener(callback) {
      const eventName = "IRCIMIWListener:onRemoteUltraGroupMessageModified";
      this._setListener(eventName, callback);
    }
    /**
     * Ë∂ÖÁ∫ßÁæ§Ê∂àÊÅØË¢´Êí§Âõû
     */
    setOnRemoteUltraGroupMessageRecalledListener(callback) {
      const eventName = "IRCIMIWListener:onRemoteUltraGroupMessageRecalled";
      this._setListener(eventName, callback);
    }
    /**
     * Ë∂ÖÁ∫ßÁæ§Â∑≤ËØªÁöÑÁõëÂê¨
     */
    setOnUltraGroupReadTimeReceivedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupReadTimeReceived";
      this._setListener(eventName, callback);
    }
    /**
     * Áî®Êà∑ËæìÂÖ•Áä∂ÊÄÅÂèòÂåñÁöÑÂõûË∞É
     * ÂΩìÂÆ¢Êà∑Á´ØÊî∂Âà∞Áî®Êà∑ËæìÂÖ•Áä∂ÊÄÅÁöÑÂèòÂåñÊó∂Ôºå‰ºöÂõûË∞ÉÊ≠§Êé•Âè£ÔºåÈÄöÁü•ÂèëÁîüÂèòÂåñÁöÑ‰ºöËØù‰ª•ÂèäÂΩìÂâçÊ≠£Âú®ËæìÂÖ•ÁöÑRCUltraGroupTypingStatusInfoÂàóË°®
     */
    setOnUltraGroupTypingStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupTypingStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * ÂèëÈÄÅÂê´ÊúâÊïèÊÑüËØçÊ∂àÊÅØË¢´Êã¶Êà™ÁöÑÂõûË∞É
     */
    setOnMessageBlockedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageBlocked";
      this._setListener(eventName, callback);
    }
    /**
     * ËÅäÂ§©ÂÆ§Áä∂ÊÄÅÂèëÁîüÂèòÂåñÁöÑÁõëÂê¨
     */
    setOnChatRoomStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * Êî∂Âà∞Áæ§ËÅäÂ∑≤ËØªÂõûÊâßËØ∑Ê±ÇÁöÑÁõëÂê¨
     */
    setOnGroupMessageReadReceiptRequestReceivedListener(callback) {
      const eventName = "IRCIMIWListener:onGroupMessageReadReceiptRequestReceived";
      this._setListener(eventName, callback);
    }
    /**
     * Êî∂Âà∞Áæ§ËÅäÂ∑≤ËØªÂõûÊâßÂìçÂ∫îÁöÑÁõëÂê¨
     */
    setOnGroupMessageReadReceiptResponseReceivedListener(callback) {
      const eventName = "IRCIMIWListener:onGroupMessageReadReceiptResponseReceived";
      this._setListener(eventName, callback);
    }
    /**
     * [connect] ÁöÑÊé•Âè£ÁõëÂê¨ÔºåÊî∂Âà∞ÈìæÊé•ÁªìÊûúÁöÑÂõûË∞É
     */
    setOnConnectedListener(callback) {
      const eventName = "IRCIMIWListener:onConnected";
      this._setListener(eventName, callback);
    }
    /**
     * [connect] ÁöÑÊé•Âè£ÁõëÂê¨ÔºåÊï∞ÊçÆÂ∫ìÊâìÂºÄÊó∂ÂèëÁîüÁöÑÂõûË∞É
     */
    setOnDatabaseOpenedListener(callback) {
      const eventName = "IRCIMIWListener:onDatabaseOpened";
      this._setListener(eventName, callback);
    }
    /**
     * [loadConversation] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadConversations] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationsLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationsLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [removeConversation] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * [removeConversations] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationsRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationsRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * [loadTotalUnreadCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnTotalUnreadCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onTotalUnreadCountLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUnreadCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUnreadCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUnreadCountLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUnreadCountByConversationTypes] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUnreadCountByConversationTypesLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUnreadCountByConversationTypesLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUnreadMentionedCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUnreadMentionedCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUnreadMentionedCountLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUltraGroupAllUnreadMentionedCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupAllUnreadCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupAllUnreadCountLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUltraGroupAllUnreadMentionedCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupAllUnreadMentionedCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupAllUnreadMentionedCountLoaded";
      this._setListener(eventName, callback);
    }
    /**
     *
     * Ë∂ÖÁ∫ßÁæ§ÂàóË°®ÂêåÊ≠•ÂÆåÊàêÁöÑÂõûË∞É
     *
     */
    setOnUltraGroupConversationsSyncedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupConversationsSynced";
      this._setListener(eventName, callback);
    }
    /**
     * [clearUnreadCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUnreadCountClearedListener(callback) {
      const eventName = "IRCIMIWListener:onUnreadCountCleared";
      this._setListener(eventName, callback);
    }
    /**
     * [saveDraftMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnDraftMessageSavedListener(callback) {
      const eventName = "IRCIMIWListener:onDraftMessageSaved";
      this._setListener(eventName, callback);
    }
    /**
     * [clearDraftMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnDraftMessageClearedListener(callback) {
      const eventName = "IRCIMIWListener:onDraftMessageCleared";
      this._setListener(eventName, callback);
    }
    /**
     * [loadDraftMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnDraftMessageLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onDraftMessageLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadBlockedConversations] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnBlockedConversationsLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onBlockedConversationsLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [changeConversationTopStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationTopStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationTopStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [loadConversationTopStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationTopStatusLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationTopStatusLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [syncConversationReadStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationReadStatusSyncedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationReadStatusSynced";
      this._setListener(eventName, callback);
    }
    /**
     * [sendMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageAttachedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageAttached";
      this._setListener(eventName, callback);
    }
    /**
     * [sendMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageSentListener(callback) {
      const eventName = "IRCIMIWListener:onMessageSent";
      this._setListener(eventName, callback);
    }
    /**
     * [sendMediaMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMediaMessageAttachedListener(callback) {
      const eventName = "IRCIMIWListener:onMediaMessageAttached";
      this._setListener(eventName, callback);
    }
    /**
     * [sendMediaMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMediaMessageSendingListener(callback) {
      const eventName = "IRCIMIWListener:onMediaMessageSending";
      this._setListener(eventName, callback);
    }
    /**
     * [cancelSendingMediaMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnSendingMediaMessageCanceledListener(callback) {
      const eventName = "IRCIMIWListener:onSendingMediaMessageCanceled";
      this._setListener(eventName, callback);
    }
    /**
     * [sendMediaMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMediaMessageSentListener(callback) {
      const eventName = "IRCIMIWListener:onMediaMessageSent";
      this._setListener(eventName, callback);
    }
    /**
     * [downloadMediaMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMediaMessageDownloadingListener(callback) {
      const eventName = "IRCIMIWListener:onMediaMessageDownloading";
      this._setListener(eventName, callback);
    }
    /**
     * [downloadMediaMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMediaMessageDownloadedListener(callback) {
      const eventName = "IRCIMIWListener:onMediaMessageDownloaded";
      this._setListener(eventName, callback);
    }
    /**
     * [cancelDownloadingMediaMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnDownloadingMediaMessageCanceledListener(callback) {
      const eventName = "IRCIMIWListener:onDownloadingMediaMessageCanceled";
      this._setListener(eventName, callback);
    }
    /**
     * [loadMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessagesLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onMessagesLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUnreadMentionedMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUnreadMentionedMessagesLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUnreadMentionedMessagesLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadFirstUnreadMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnFirstUnreadMessageLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onFirstUnreadMessageLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [insertMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageInsertedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageInserted";
      this._setListener(eventName, callback);
    }
    /**
     * [insertMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessagesInsertedListener(callback) {
      const eventName = "IRCIMIWListener:onMessagesInserted";
      this._setListener(eventName, callback);
    }
    /**
     * [clearMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessagesClearedListener(callback) {
      const eventName = "IRCIMIWListener:onMessagesCleared";
      this._setListener(eventName, callback);
    }
    /**
     * [deleteLocalMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnLocalMessagesDeletedListener(callback) {
      const eventName = "IRCIMIWListener:onLocalMessagesDeleted";
      this._setListener(eventName, callback);
    }
    /**
     * [deleteMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessagesDeletedListener(callback) {
      const eventName = "IRCIMIWListener:onMessagesDeleted";
      this._setListener(eventName, callback);
    }
    /**
     * [recallMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageRecalledListener(callback) {
      const eventName = "IRCIMIWListener:onMessageRecalled";
      this._setListener(eventName, callback);
    }
    /**
     * [sendPrivateReadReceiptMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnPrivateReadReceiptMessageSentListener(callback) {
      const eventName = "IRCIMIWListener:onPrivateReadReceiptMessageSent";
      this._setListener(eventName, callback);
    }
    /**
     * [updateMessageExpansion] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageExpansionUpdatedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageExpansionUpdated";
      this._setListener(eventName, callback);
    }
    /**
     * [removeMessageExpansionForKeys] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageExpansionForKeysRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageExpansionForKeysRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * [changeMessageReceiveStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageReceiveStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageReceiveStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [changeMessageSentStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageSentStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageSentStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [joinChatRoom] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomJoinedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomJoined";
      this._setListener(eventName, callback);
    }
    /**
     * Ê≠£Âú®Âä†ÂÖ•ËÅäÂ§©ÂÆ§ÁöÑÂõûË∞É
     */
    setOnChatRoomJoiningListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomJoining";
      this._setListener(eventName, callback);
    }
    /**
     * [leaveChatRoom] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomLeftListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomLeft";
      this._setListener(eventName, callback);
    }
    /**
     * [loadChatRoomMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomMessagesLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomMessagesLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [addChatRoomEntry] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomEntryAddedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomEntryAdded";
      this._setListener(eventName, callback);
    }
    /**
     * [addChatRoomEntries] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomEntriesAddedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomEntriesAdded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadChatRoomEntry] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomEntryLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomEntryLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadChatRoomAllEntries] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomAllEntriesLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomAllEntriesLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [removeChatRoomEntry] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomEntryRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomEntryRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * [removeChatRoomEntries] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnChatRoomEntriesRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onChatRoomEntriesRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * [addToBlacklist] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnBlacklistAddedListener(callback) {
      const eventName = "IRCIMIWListener:onBlacklistAdded";
      this._setListener(eventName, callback);
    }
    /**
     * [removeFromBlacklist] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnBlacklistRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onBlacklistRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * [loadBlacklistStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnBlacklistStatusLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onBlacklistStatusLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [loadBlacklist] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnBlacklistLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onBlacklistLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [searchMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessagesSearchedListener(callback) {
      const eventName = "IRCIMIWListener:onMessagesSearched";
      this._setListener(eventName, callback);
    }
    /**
     * [searchMessagesByTimeRange] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessagesSearchedByTimeRangeListener(callback) {
      const eventName = "IRCIMIWListener:onMessagesSearchedByTimeRange";
      this._setListener(eventName, callback);
    }
    /**
     * [searchMessagesByUserId] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessagesSearchedByUserIdListener(callback) {
      const eventName = "IRCIMIWListener:onMessagesSearchedByUserId";
      this._setListener(eventName, callback);
    }
    /**
     * [searchConversations] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationsSearchedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationsSearched";
      this._setListener(eventName, callback);
    }
    /**
     * sendGroupReadReceiptRequest ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnGroupReadReceiptRequestSentListener(callback) {
      const eventName = "IRCIMIWListener:onGroupReadReceiptRequestSent";
      this._setListener(eventName, callback);
    }
    /**
     * [sendGroupReadReceiptResponse] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnGroupReadReceiptResponseSentListener(callback) {
      const eventName = "IRCIMIWListener:onGroupReadReceiptResponseSent";
      this._setListener(eventName, callback);
    }
    /**
     * [changeNotificationQuietHours] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnNotificationQuietHoursChangedListener(callback) {
      const eventName = "IRCIMIWListener:onNotificationQuietHoursChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [removeNotificationQuietHours] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnNotificationQuietHoursRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onNotificationQuietHoursRemoved";
      this._setListener(eventName, callback);
    }
    /**
     * [loadNotificationQuietHours] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnNotificationQuietHoursLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onNotificationQuietHoursLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [changeConversationNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnConversationNotificationLevelChangedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationNotificationLevelChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [loadConversationNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnConversationNotificationLevelLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationNotificationLevelLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [changeConversationTypeNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnConversationTypeNotificationLevelChangedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationTypeNotificationLevelChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [loadConversationTypeNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnConversationTypeNotificationLevelLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onConversationTypeNotificationLevelLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [changeUltraGroupDefaultNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnUltraGroupDefaultNotificationLevelChangedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupDefaultNotificationLevelChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUltraGroupDefaultNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnUltraGroupDefaultNotificationLevelLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupDefaultNotificationLevelLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [changeUltraGroupChannelDefaultNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnUltraGroupChannelDefaultNotificationLevelChangedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupChannelDefaultNotificationLevelChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUltraGroupChannelDefaultNotificationLevel] ÁöÑÊé•Âè£ÂõûË∞É
     */
    setOnUltraGroupChannelDefaultNotificationLevelLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupChannelDefaultNotificationLevelLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [changePushContentShowStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnPushContentShowStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onPushContentShowStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [changePushLanguage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnPushLanguageChangedListener(callback) {
      const eventName = "IRCIMIWListener:onPushLanguageChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [changePushReceiveStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnPushReceiveStatusChangedListener(callback) {
      const eventName = "IRCIMIWListener:onPushReceiveStatusChanged";
      this._setListener(eventName, callback);
    }
    /**
     * [loadMessageCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnMessageCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onMessageCountLoaded";
      this._setListener(eventName, callback);
    }
    /**
     *
     */
    setOnTopConversationsLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onTopConversationsLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [sendGroupMessageToDesignatedUsers] ÁöÑÊé•Âè£ÂõûË∞É
     * Ê∂àÊÅØÂ≠òÂÖ•Êï∞ÊçÆÂ∫ìÁöÑÂõûË∞É
     */
    setOnGroupMessageToDesignatedUsersAttachedListener(callback) {
      const eventName = "IRCIMIWListener:onGroupMessageToDesignatedUsersAttached";
      this._setListener(eventName, callback);
    }
    /**
     * [sendGroupMessageToDesignatedUsers] ÁöÑÊé•Âè£ÂõûË∞É
     * Ê∂àÊÅØÂèëÈÄÅÂÆåÊàêÁöÑÂõûË∞É
     */
    setOnGroupMessageToDesignatedUsersSentListener(callback) {
      const eventName = "IRCIMIWListener:onGroupMessageToDesignatedUsersSent";
      this._setListener(eventName, callback);
    }
    /**
     * [syncUltraGroupReadStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupReadStatusSyncedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupReadStatusSynced";
      this._setListener(eventName, callback);
    }
    /**
     * [loadConversationsForAllChannel] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnConversationsLoadedForAllChannelListener(callback) {
      const eventName = "IRCIMIWListener:onConversationsLoadedForAllChannel";
      this._setListener(eventName, callback);
    }
    /**
     * [loadUltraGroupUnreadMentionedCount] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupUnreadMentionedCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupUnreadMentionedCountLoaded";
      this._setListener(eventName, callback);
    }
    setOnUltraGroupUnreadCountLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupUnreadCountLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [modifyUltraGroupMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupMessageModifiedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupMessageModified";
      this._setListener(eventName, callback);
    }
    /**
     * [recallUltraGroupMessage] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupMessageRecalledListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupMessageRecalled";
      this._setListener(eventName, callback);
    }
    /**
     * [clearUltraGroupMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupMessagesClearedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupMessagesCleared";
      this._setListener(eventName, callback);
    }
    /**
     * [clearUltraGroupMessagesForAllChannel] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupMessagesClearedForAllChannelListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupMessagesClearedForAllChannel";
      this._setListener(eventName, callback);
    }
    /**
     * [sendUltraGroupTypingStatus] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupTypingStatusSentListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupTypingStatusSent";
      this._setListener(eventName, callback);
    }
    /**
     * [loadBatchRemoteUltraGroupMessages] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnBatchRemoteUltraGroupMessagesLoadedListener(callback) {
      const eventName = "IRCIMIWListener:onBatchRemoteUltraGroupMessagesLoaded";
      this._setListener(eventName, callback);
    }
    /**
     * [updateUltraGroupMessageExpansion] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupMessageExpansionUpdatedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupMessageExpansionUpdated";
      this._setListener(eventName, callback);
    }
    /**
     * [removeUltraGroupMessageExpansionForKeys] ÁöÑÊé•Âè£ÁõëÂê¨
     */
    setOnUltraGroupMessageExpansionForKeysRemovedListener(callback) {
      const eventName = "IRCIMIWListener:onUltraGroupMessageExpansionForKeysRemoved";
      this._setListener(eventName, callback);
    }
  }
  const globalState = {
    // ËÆæÁΩÆ IM ÂºïÊìé
    setIMEngine(engine) {
      try {
        const app = getApp();
        if (!app.globalData) {
          app.globalData = {};
        }
        app.globalData.imEngine = engine;
        formatAppLog("log", "at utils/IMEngineUtils.js:12", "ÂÖ®Â±Ä IM ÂºïÊìéÂ∑≤ËÆæÁΩÆ:", engine);
      } catch (e) {
        formatAppLog("error", "at utils/IMEngineUtils.js:14", "ËÆæÁΩÆ IM ÂºïÊìéÂ§±Ë¥•:", e);
      }
    },
    // Ëé∑Âèñ IM ÂºïÊìé
    async getIMEngine() {
      var _a;
      try {
        const app = getApp();
        let engine = (_a = app.globalData) == null ? void 0 : _a.imEngine;
        if (!engine) {
          formatAppLog("log", "at utils/IMEngineUtils.js:24", engine);
          const options = {};
          engine = await RCIMIWEngine.create(appConfig.appKey, options);
          formatAppLog("log", "at utils/IMEngineUtils.js:27", engine);
        }
        engine.changeLogLevel(4);
        formatAppLog("log", "at utils/IMEngineUtils.js:30", "‰ªéglobalDataËé∑Âèñ IM ÂºïÊìé:", engine);
        return engine;
      } catch (e) {
        formatAppLog("error", "at utils/IMEngineUtils.js:33", "Ëé∑Âèñ IM ÂºïÊìéÂ§±Ë¥•:", e);
        return null;
      }
    },
    // Ê∏ÖÁêÜÊâÄÊúâÁä∂ÊÄÅ
    clear() {
      try {
        uni.removeStorageSync("loginInfo");
        const app = getApp();
        if (app.globalData) {
          app.globalData.imEngine = null;
        }
        formatAppLog("log", "at utils/IMEngineUtils.js:46", "ÂÖ®Â±ÄÁä∂ÊÄÅÂ∑≤Ê∏ÖÁêÜ");
      } catch (e) {
        formatAppLog("error", "at utils/IMEngineUtils.js:48", "Ê∏ÖÁêÜÂÖ®Â±ÄÁä∂ÊÄÅÂ§±Ë¥•:", e);
      }
    },
    // ËøûÊé• IM
    async connectIM(token, userId) {
      const imEngine = await this.getIMEngine();
      if (imEngine) {
        try {
          let callback = {
            onDatabaseOpened: (res) => {
              formatAppLog("log", "at utils/IMEngineUtils.js:59", "Êï∞ÊçÆÂ∫ìÊâìÂºÄÂõûË∞É:", res);
            },
            onConnected: (res) => {
              formatAppLog("log", "at utils/IMEngineUtils.js:62", "ËøûÊé•ÂõûË∞É:", res);
              if (res.code == 0) {
                uni.showToast({
                  title: "ÁôªÂΩïÊàêÂäü",
                  icon: "none"
                });
                let loginInfo = {
                  userId,
                  token
                };
                uni.setStorageSync("loginInfo", loginInfo);
                setTimeout(() => {
                  uni.navigateBack({
                    delta: 1
                  });
                }, 200);
                return;
              } else {
                uni.showToast({
                  title: "ËøûÊé•Â§±Ë¥•: " + res.code,
                  icon: "error"
                });
              }
            }
          };
          const code = await imEngine.connect(token, 10, callback);
          formatAppLog("log", "at utils/IMEngineUtils.js:90", "IM ËøûÊé•ÁªìÊûú:", code);
          return code;
        } catch (error) {
          formatAppLog("error", "at utils/IMEngineUtils.js:93", "ËøûÊé• IM Â§±Ë¥•:", error);
          throw error;
        }
      } else {
        throw new Error("IM ÂºïÊìéÊú™ÂàùÂßãÂåñ");
      }
    },
    // Êñ≠ÂºÄ IM ËøûÊé•
    async disconnectIM() {
      const imEngine = await this.getIMEngine();
      if (imEngine) {
        try {
          await imEngine.disconnect(false);
          this.clear();
        } catch (error) {
          formatAppLog("error", "at utils/IMEngineUtils.js:109", "Êñ≠ÂºÄ IM ËøûÊé•Â§±Ë¥•:", error);
        }
      }
    }
  };
  const _export_sfc = (sfc, props) => {
    const target = sfc.__vccOpts || sfc;
    for (const [key, val] of props) {
      target[key] = val;
    }
    return target;
  };
  const _sfc_main$2 = {
    data() {
      return {
        currentUserId: "",
        imEngine: null
      };
    },
    onLoad() {
      this.checkLoginStatus();
    },
    onShow() {
      const loginInfo = uni.getStorageSync("loginInfo");
      this.currentUserId = loginInfo.userId;
    },
    methods: {
      async checkLoginStatus() {
        try {
          const loginInfo = uni.getStorageSync("loginInfo");
          if (loginInfo) {
            this.currentUserId = loginInfo.userId;
            let token = loginInfo.token;
            let userId = loginInfo.userId;
            formatAppLog("log", "at pages/index/index.vue:71", this.token);
            await globalState.connectIM(token, userId);
          } else {
            formatAppLog("log", "at pages/index/index.vue:75", "checkLoginStatus");
            uni.navigateTo({
              url: "/pages/login/login"
            });
          }
        } catch (error) {
          formatAppLog("error", "at pages/index/index.vue:82", "Ê£ÄÊü•ÁôªÂΩïÁä∂ÊÄÅÂ§±Ë¥•:", error);
          uni.navigateTo({
            url: "/pages/login/login"
          });
        }
      },
      /**
       * ‰ºöËÆÆ
       */
      async goToMeeting() {
        formatAppLog("log", "at pages/index/index.vue:93", "ÂºÄÂßãÊùÉÈôêÁî≥ËØ∑...");
        try {
          const systemInfo = uni.getSystemInfoSync();
          const platform = systemInfo.platform;
          if (platform === "android") {
            await requestAndroidPermissions();
          }
          formatAppLog("log", "at pages/index/index.vue:102", "ÊùÉÈôêÁî≥ËØ∑ÂÆåÊàêÔºåË∑≥ËΩ¨Âà∞RTCÈ°µÈù¢");
          uni.navigateTo({
            url: "/pages/rtc/meeting"
          });
        } catch (error) {
          formatAppLog("error", "at pages/index/index.vue:109", "ÊùÉÈôêÁî≥ËØ∑ÂºÇÂ∏∏Ôºö", error);
          uni.navigateTo({
            url: "/pages/rtc/meeting"
          });
        }
      },
      /**
       * Áõ¥Êí≠
       */
      async goToLive() {
        try {
          const systemInfo = uni.getSystemInfoSync();
          const platform = systemInfo.platform;
          if (platform === "android") {
            await requestAndroidPermissions();
          }
          formatAppLog("log", "at pages/index/index.vue:128", "ÊùÉÈôêÁî≥ËØ∑ÂÆåÊàêÔºåË∑≥ËΩ¨Âà∞RTCÈ°µÈù¢");
          uni.navigateTo({
            url: "/pages/rtc/live"
          });
        } catch (error) {
          formatAppLog("error", "at pages/index/index.vue:135", "ÊùÉÈôêÁî≥ËØ∑ÂºÇÂ∏∏Ôºö", error);
          uni.navigateTo({
            url: "/pages/rtc/live"
          });
        }
      },
      /**
       * Êñ≠ÂºÄ IM ËøûÊé•
       */
      async handleLogout() {
        uni.showModal({
          title: "Á°ÆËÆ§ÈÄÄÂá∫",
          content: "Á°ÆÂÆöË¶ÅÈÄÄÂá∫ÁôªÂΩïÂêóÔºü",
          success: async (res) => {
            if (res.confirm) {
              formatAppLog("log", "at pages/index/index.vue:152", this.imEngine);
              await globalState.disconnectIM();
              uni.showToast({
                title: "Â∑≤ÈÄÄÂá∫ÁôªÂΩï",
                icon: "success"
              });
              uni.navigateTo({
                url: "/pages/login/login"
              });
            }
          }
        });
      }
    }
  };
  function _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "content" }, [
      vue.createElementVNode("view", { class: "header" }, [
        vue.createElementVNode("text", { class: "title" }, "Ëûç‰∫ëRTCÊºîÁ§∫")
      ]),
      vue.createElementVNode("view", { class: "user-info" }, [
        vue.createElementVNode("text", { class: "welcome" }, "Ê¨¢ËøéÂõûÊù•ÔºÅ"),
        vue.createElementVNode(
          "text",
          { class: "user-id" },
          "Áî®Êà∑ID: " + vue.toDisplayString($data.currentUserId),
          1
          /* TEXT */
        )
      ]),
      vue.createElementVNode("view", { class: "feature-cards" }, [
        vue.createElementVNode("view", {
          class: "card primary-card",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.goToMeeting && $options.goToMeeting(...args))
        }, [
          vue.createElementVNode("view", { class: "card-content" }, [
            vue.createElementVNode("view", { class: "card-icon" }, "üé§"),
            vue.createElementVNode("text", { class: "card-title" }, "Èü≥ËßÜÈ¢ë‰ºöËÆÆ"),
            vue.createElementVNode("text", { class: "card-desc" }, "Â§ö‰∫∫Èü≥ËßÜÈ¢ë‰ºöËÆÆ")
          ]),
          vue.createElementVNode("view", { class: "card-arrow" }, ">")
        ]),
        vue.createElementVNode("view", {
          class: "card secondary-card",
          onClick: _cache[1] || (_cache[1] = (...args) => $options.goToLive && $options.goToLive(...args))
        }, [
          vue.createElementVNode("view", { class: "card-content" }, [
            vue.createElementVNode("view", { class: "card-icon" }, "üé•"),
            vue.createElementVNode("text", { class: "card-title" }, "Èü≥ËßÜÈ¢ëÁõ¥Êí≠"),
            vue.createElementVNode("text", { class: "card-desc" }, "ÂÆûÊó∂Èü≥ËßÜÈ¢ëÁõ¥Êí≠")
          ]),
          vue.createElementVNode("view", { class: "card-arrow" }, ">")
        ])
      ]),
      vue.createElementVNode("view", { class: "action-buttons" }, [
        vue.createElementVNode("button", {
          class: "secondary-btn",
          onClick: _cache[2] || (_cache[2] = (...args) => $options.handleLogout && $options.handleLogout(...args))
        }, " ÈÄÄÂá∫ÁôªÂΩï ")
      ])
    ]);
  }
  const PagesIndexIndex = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["render", _sfc_render$1], ["__file", "/Users/yongqiming/developer/UAT/uniapp-rtc-quickdemo/pages/index/index.vue"]]);
  const _sfc_main$1 = {
    data() {
      return {
        selectedUserIndex: 0,
        userOptions: [],
        isDropdownOpen: false,
        isLoading: false,
        imEngine: null,
        rtcEngine: null,
        engine: null
      };
    },
    onLoad() {
      this.initUserOptions();
    },
    onShow() {
      this.isDropdownOpen = false;
    },
    computed: {
      selectedUser() {
        return this.userOptions[this.selectedUserIndex] || {};
      }
    },
    methods: {
      initUserOptions() {
        this.userOptions = appConfig.testUsers.map((user) => ({
          ...user,
          userId: user.id
          // ‰øùÊåÅÂÖºÂÆπÊÄß
        }));
        formatAppLog("log", "at pages/login/login.vue:98", "ÂàùÂßãÂåñÁî®Êà∑ÈÄâÈ°π:", this.userOptions);
      },
      toggleDropdown() {
        this.isDropdownOpen = !this.isDropdownOpen;
      },
      selectUser(index) {
        this.selectedUserIndex = index;
        this.isDropdownOpen = false;
        formatAppLog("log", "at pages/login/login.vue:108", "ÈÄâÊã©Áî®Êà∑:", this.userOptions[index]);
      },
      async handleLogin() {
        await this.connectIM();
      },
      //ËøûÊé•IM
      async connectIM() {
        try {
          const selectedUser = this.userOptions[this.selectedUserIndex];
          const token = selectedUser.token;
          const userId = selectedUser.userId;
          formatAppLog("log", "at pages/login/login.vue:122", "ÈÄâÊã©ÁöÑÁî®Êà∑‰ø°ÊÅØ:", selectedUser);
          formatAppLog("log", "at pages/login/login.vue:123", "‰ΩøÁî®ÁöÑToken:", token);
          formatAppLog("log", "at pages/login/login.vue:124", "Áî®Êà∑ID:", userId);
          this.isLoading = true;
          await globalState.connectIM(token, userId);
        } catch (error) {
          formatAppLog("error", "at pages/login/login.vue:132", "ËøûÊé•IMÊó∂ÂèëÁîüÈîôËØØ:", error);
          uni.showToast({
            title: "ËøûÊé•Â§±Ë¥•: " + error.message,
            icon: "error"
          });
        } finally {
          this.isLoading = false;
        }
      }
    }
  };
  function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "login-container" }, [
      vue.createElementVNode("view", { class: "login-box" }, [
        vue.createElementVNode("view", { class: "logo-area" }, [
          vue.createElementVNode("text", { class: "app-title" }, "Ëûç‰∫ëRTCÊºîÁ§∫")
        ]),
        vue.createElementVNode("view", { class: "input-area" }, [
          vue.createElementVNode("view", { class: "input-group" }, [
            vue.createElementVNode("text", { class: "label" }, "ÈÄâÊã©Áî®Êà∑"),
            vue.createElementVNode("view", {
              class: "custom-select",
              onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleDropdown && $options.toggleDropdown(...args))
            }, [
              vue.createElementVNode("view", { class: "select-display" }, [
                vue.createElementVNode("view", { class: "user-info" }, [
                  vue.createElementVNode(
                    "text",
                    { class: "user-avatar" },
                    vue.toDisplayString($options.selectedUser.avatar),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode("view", { class: "user-details" }, [
                    vue.createElementVNode(
                      "text",
                      { class: "user-name" },
                      vue.toDisplayString($options.selectedUser.name),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode(
                      "text",
                      { class: "user-id" },
                      "ID: " + vue.toDisplayString($options.selectedUser.id),
                      1
                      /* TEXT */
                    )
                  ])
                ]),
                vue.createElementVNode(
                  "view",
                  {
                    class: vue.normalizeClass(["select-arrow", { "rotated": $data.isDropdownOpen }])
                  },
                  " ‚ñº ",
                  2
                  /* CLASS */
                )
              ]),
              vue.createCommentVNode(" ‰∏ãÊãâÈÄâÈ°π "),
              $data.isDropdownOpen ? (vue.openBlock(), vue.createElementBlock("view", {
                key: 0,
                class: "dropdown-options"
              }, [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($data.userOptions, (user, index) => {
                    return vue.openBlock(), vue.createElementBlock("view", {
                      key: user.id,
                      class: vue.normalizeClass(["dropdown-option", { "active": index === $data.selectedUserIndex }]),
                      onClick: vue.withModifiers(($event) => $options.selectUser(index), ["stop"])
                    }, [
                      vue.createElementVNode(
                        "text",
                        { class: "option-avatar" },
                        vue.toDisplayString(user.avatar),
                        1
                        /* TEXT */
                      ),
                      vue.createElementVNode("view", { class: "option-details" }, [
                        vue.createElementVNode(
                          "text",
                          { class: "option-name" },
                          vue.toDisplayString(user.name),
                          1
                          /* TEXT */
                        ),
                        vue.createElementVNode(
                          "text",
                          { class: "option-id" },
                          "ID: " + vue.toDisplayString(user.id),
                          1
                          /* TEXT */
                        ),
                        vue.createElementVNode(
                          "text",
                          { class: "option-desc" },
                          vue.toDisplayString(user.description),
                          1
                          /* TEXT */
                        )
                      ])
                    ], 10, ["onClick"]);
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ])) : vue.createCommentVNode("v-if", true)
            ])
          ])
        ]),
        vue.createElementVNode("view", { class: "button-area" }, [
          vue.createElementVNode("button", {
            class: "login-btn",
            onClick: _cache[1] || (_cache[1] = (...args) => $options.handleLogin && $options.handleLogin(...args)),
            loading: $data.isLoading
          }, vue.toDisplayString($data.isLoading ? "ËøûÊé•‰∏≠..." : "ËøûÊé•"), 9, ["loading"])
        ])
      ])
    ]);
  }
  const PagesLoginLogin = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render], ["__scopeId", "data-v-e4e4508d"], ["__file", "/Users/yongqiming/developer/UAT/uniapp-rtc-quickdemo/pages/login/login.vue"]]);
  __definePage("pages/index/index", PagesIndexIndex);
  __definePage("pages/login/login", PagesLoginLogin);
  const _sfc_main = {
    globalData: {
      imEngine: null,
      rtcEngine: null
    },
    onLaunch: function() {
      formatAppLog("log", "at App.vue:8", "App Launch");
      formatAppLog("log", "at App.vue:9", "App globalData Â∑≤ÂàùÂßãÂåñ:", this.globalData);
    },
    onShow: function() {
      formatAppLog("log", "at App.vue:12", "App Show");
    },
    onHide: function() {
      formatAppLog("log", "at App.vue:15", "App Hide");
    }
  };
  const App = /* @__PURE__ */ _export_sfc(_sfc_main, [["__file", "/Users/yongqiming/developer/UAT/uniapp-rtc-quickdemo/App.vue"]]);
  function createApp() {
    const app = vue.createVueApp(App);
    return {
      app
    };
  }
  const { app: __app__, Vuex: __Vuex__, Pinia: __Pinia__ } = createApp();
  uni.Vuex = __Vuex__;
  uni.Pinia = __Pinia__;
  __app__.provide("__globalStyles", __uniConfig.styles);
  __app__._component.mpType = "app";
  __app__._component.render = () => {
  };
  __app__.mount("#app");
})(Vue);
